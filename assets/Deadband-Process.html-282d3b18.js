const e=JSON.parse('{"key":"v-dc4f4214","path":"/zh/UserGuide/V1.0.x/Data-Concept/Deadband-Process.html","title":"死区处理","lang":"zh-CN","frontmatter":{"description":"旋转门压缩 旋转门压缩（SDT）算法是一种死区处理算法。SDT 的计算复杂度较低，并使用线性趋势来表示大量数据。 在 IoTDB 中，SDT 在刷新到磁盘时会压缩并丢弃数据。 IoTDB 允许您在创建时间序列时指定 SDT 的属性，并支持以下三个属性： CompDev （Compression Deviation，压缩偏差）; CompDev 是 SD...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://iotdb.apache.org/UserGuide/V1.0.x/Data-Concept/Deadband-Process.html"}],["meta",{"property":"og:url","content":"https://iotdb.apache.org/zh/UserGuide/V1.0.x/Data-Concept/Deadband-Process.html"}],["meta",{"property":"og:site_name","content":"IoTDB Website"}],["meta",{"property":"og:title","content":"死区处理"}],["meta",{"property":"og:description","content":"旋转门压缩 旋转门压缩（SDT）算法是一种死区处理算法。SDT 的计算复杂度较低，并使用线性趋势来表示大量数据。 在 IoTDB 中，SDT 在刷新到磁盘时会压缩并丢弃数据。 IoTDB 允许您在创建时间序列时指定 SDT 的属性，并支持以下三个属性： CompDev （Compression Deviation，压缩偏差）; CompDev 是 SD..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-07-14T09:47:07.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-14T09:47:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"死区处理\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-14T09:47:07.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"旋转门压缩","slug":"旋转门压缩","link":"#旋转门压缩","children":[]}],"git":{"createdTime":1689328027000,"updatedTime":1689328027000,"contributors":[{"name":"Haonan","email":"hhaonan@outlook.com","commits":1}]},"readingTime":{"minutes":2.88,"words":863},"filePathRelative":"zh/UserGuide/V1.0.x/Data-Concept/Deadband-Process.md","localizedDate":"2023年7月14日","autoDesc":true}');export{e as data};
