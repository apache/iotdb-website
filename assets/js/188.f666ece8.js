(window.webpackJsonp=window.webpackJsonp||[]).push([[188],{755:function(t,_,v){"use strict";v.r(_);var a=v(69),r=Object(a.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"spark-iotdb-连接器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#spark-iotdb-连接器"}},[t._v("#")]),t._v(" Spark IOTDB 连接器")]),t._v(" "),v("h2",{attrs:{id:"设计目的"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#设计目的"}},[t._v("#")]),t._v(" 设计目的")]),t._v(" "),v("ul",[v("li",[t._v("使用 Spark SQL 读取 IOTDB 的数据，以 Spark DataFrame 的形式返回给客户端")])]),t._v(" "),v("h2",{attrs:{id:"核心思想"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#核心思想"}},[t._v("#")]),t._v(" 核心思想")]),t._v(" "),v("p",[t._v("由于 IOTDB 具有解析和执行 SQL 的能力，故该部分可以直接将 SQL 转发给 IOTDB 进程执行，将数据拿到后转换为 RDD 即可")]),t._v(" "),v("h2",{attrs:{id:"执行流程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#执行流程"}},[t._v("#")]),t._v(" 执行流程")]),t._v(" "),v("h4",{attrs:{id:"_1-入口"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-入口"}},[t._v("#")]),t._v(" 1. 入口")]),t._v(" "),v("ul",[v("li",[t._v("src/main/scala/org/apache/iotdb/spark/db/DefaultSource.scala")])]),t._v(" "),v("h4",{attrs:{id:"_2-构建-relation"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-构建-relation"}},[t._v("#")]),t._v(" 2. 构建 Relation")]),t._v(" "),v("p",[t._v("Relation 主要保存了 RDD 的元信息，比如列名字，分区策略等，调用 Relation 的 buildScan 方法可以创建 RDD")]),t._v(" "),v("ul",[v("li",[t._v("src/main/scala/org/apache/iotdb/spark/db/IoTDBRelation.scala")])]),t._v(" "),v("h4",{attrs:{id:"_3-构建-rdd"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-构建-rdd"}},[t._v("#")]),t._v(" 3. 构建 RDD")]),t._v(" "),v("p",[t._v("RDD 中执行对 IOTDB 的 SQL 请求，保存游标")]),t._v(" "),v("ul",[v("li",[t._v("src/main/scala/org/apache/iotdb/spark/db/IoTDBRDD.scala 中的 compute 方法")])]),t._v(" "),v("h4",{attrs:{id:"_4-迭代-rdd"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-迭代-rdd"}},[t._v("#")]),t._v(" 4. 迭代 RDD")]),t._v(" "),v("p",[t._v("由于 Spark 懒加载机制，用户遍历 RDD 时才具体调用 RDD 的迭代，也就是 IOTDB 的 fetch Result")]),t._v(" "),v("ul",[v("li",[t._v("src/main/scala/org/apache/iotdb/spark/db/IoTDBRDD.scala 中的 getNext 方法")])]),t._v(" "),v("h2",{attrs:{id:"宽窄表结构转换"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#宽窄表结构转换"}},[t._v("#")]),t._v(" 宽窄表结构转换")]),t._v(" "),v("p",[t._v("宽表结构：IOTDB 原生路径格式")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("time")]),t._v(" "),v("th",[t._v("root.ln.wf02.wt02.temperature")]),t._v(" "),v("th",[t._v("root.ln.wf02.wt02.status")]),t._v(" "),v("th",[t._v("root.ln.wf02.wt02.hardware")]),t._v(" "),v("th",[t._v("root.ln.wf01.wt01.temperature")]),t._v(" "),v("th",[t._v("root.ln.wf01.wt01.status")]),t._v(" "),v("th",[t._v("root.ln.wf01.wt01.hardware")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("1")]),t._v(" "),v("td",[t._v("null")]),t._v(" "),v("td",[t._v("true")]),t._v(" "),v("td",[t._v("null")]),t._v(" "),v("td",[t._v("2.2")]),t._v(" "),v("td",[t._v("true")]),t._v(" "),v("td",[t._v("null")])]),t._v(" "),v("tr",[v("td",[t._v("2")]),t._v(" "),v("td",[t._v("null")]),t._v(" "),v("td",[t._v("false")]),t._v(" "),v("td",[t._v("aaa")]),t._v(" "),v("td",[t._v("2.2")]),t._v(" "),v("td",[t._v("null")]),t._v(" "),v("td",[t._v("null")])]),t._v(" "),v("tr",[v("td",[t._v("3")]),t._v(" "),v("td",[t._v("null")]),t._v(" "),v("td",[t._v("null")]),t._v(" "),v("td",[t._v("null")]),t._v(" "),v("td",[t._v("2.1")]),t._v(" "),v("td",[t._v("true")]),t._v(" "),v("td",[t._v("null")])]),t._v(" "),v("tr",[v("td",[t._v("4")]),t._v(" "),v("td",[t._v("null")]),t._v(" "),v("td",[t._v("true")]),t._v(" "),v("td",[t._v("bbb")]),t._v(" "),v("td",[t._v("null")]),t._v(" "),v("td",[t._v("null")]),t._v(" "),v("td",[t._v("null")])]),t._v(" "),v("tr",[v("td",[t._v("5")]),t._v(" "),v("td",[t._v("null")]),t._v(" "),v("td",[t._v("null")]),t._v(" "),v("td",[t._v("null")]),t._v(" "),v("td",[t._v("null")]),t._v(" "),v("td",[t._v("false")]),t._v(" "),v("td",[t._v("null")])]),t._v(" "),v("tr",[v("td",[t._v("6")]),t._v(" "),v("td",[t._v("null")]),t._v(" "),v("td",[t._v("null")]),t._v(" "),v("td",[t._v("ccc")]),t._v(" "),v("td",[t._v("null")]),t._v(" "),v("td",[t._v("null")]),t._v(" "),v("td",[t._v("null")])])])]),t._v(" "),v("p",[t._v("窄表结构：关系型数据库模式，IOTDB align by device 格式")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("time")]),t._v(" "),v("th",[t._v("device_name")]),t._v(" "),v("th",[t._v("status")]),t._v(" "),v("th",[t._v("hardware")]),t._v(" "),v("th",[t._v("temperature")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("1")]),t._v(" "),v("td",[t._v("root.ln.wf02.wt01")]),t._v(" "),v("td",[t._v("true")]),t._v(" "),v("td",[t._v("null")]),t._v(" "),v("td",[t._v("2.2")])]),t._v(" "),v("tr",[v("td",[t._v("1")]),t._v(" "),v("td",[t._v("root.ln.wf02.wt02")]),t._v(" "),v("td",[t._v("true")]),t._v(" "),v("td",[t._v("null")]),t._v(" "),v("td",[t._v("null")])]),t._v(" "),v("tr",[v("td",[t._v("2")]),t._v(" "),v("td",[t._v("root.ln.wf02.wt01")]),t._v(" "),v("td",[t._v("null")]),t._v(" "),v("td",[t._v("null")]),t._v(" "),v("td",[t._v("2.2")])]),t._v(" "),v("tr",[v("td",[t._v("2")]),t._v(" "),v("td",[t._v("root.ln.wf02.wt02")]),t._v(" "),v("td",[t._v("false")]),t._v(" "),v("td",[t._v("aaa")]),t._v(" "),v("td",[t._v("null")])]),t._v(" "),v("tr",[v("td",[t._v("3")]),t._v(" "),v("td",[t._v("root.ln.wf02.wt01")]),t._v(" "),v("td",[t._v("true")]),t._v(" "),v("td",[t._v("null")]),t._v(" "),v("td",[t._v("2.1")])]),t._v(" "),v("tr",[v("td",[t._v("4")]),t._v(" "),v("td",[t._v("root.ln.wf02.wt02")]),t._v(" "),v("td",[t._v("true")]),t._v(" "),v("td",[t._v("bbb")]),t._v(" "),v("td",[t._v("null")])]),t._v(" "),v("tr",[v("td",[t._v("5")]),t._v(" "),v("td",[t._v("root.ln.wf02.wt01")]),t._v(" "),v("td",[t._v("false")]),t._v(" "),v("td",[t._v("null")]),t._v(" "),v("td",[t._v("null")])]),t._v(" "),v("tr",[v("td",[t._v("6")]),t._v(" "),v("td",[t._v("root.ln.wf02.wt02")]),t._v(" "),v("td",[t._v("null")]),t._v(" "),v("td",[t._v("ccc")]),t._v(" "),v("td",[t._v("null")])])])]),t._v(" "),v("p",[t._v("由于 IOTDB 查询到的数据默认为宽表结构，所以需要宽窄表转换，有如下两个实现方法")]),t._v(" "),v("h4",{attrs:{id:"_1-使用-iotdb-的-group-by-device-语句"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-使用-iotdb-的-group-by-device-语句"}},[t._v("#")]),t._v(" 1. 使用 IOTDB 的 group by device 语句")]),t._v(" "),v("p",[t._v("这种方式可以直接拿到窄表结构，计算由 IOTDB 完成")]),t._v(" "),v("h4",{attrs:{id:"_2-使用-transformer"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-使用-transformer"}},[t._v("#")]),t._v(" 2. 使用 Transformer")]),t._v(" "),v("p",[t._v("可以使用 Transformer 进行宽窄表之间的转换，计算由 Spark 完成")]),t._v(" "),v("ul",[v("li",[t._v("src/main/scala/org/apache/iotdb/spark/db/Transformer.scala")])]),t._v(" "),v("p",[t._v("宽表转窄表使用了遍历 device 列表，生成对应的窄表，在 union 起来的策略，并行性较好（无 shuffle）")]),t._v(" "),v("p",[t._v("窄表转宽表使用了基于 timestamp 的 join 操作，有 shuffle，可能存在潜在的性能问题")])])}),[],!1,null,null,null);_.default=r.exports}}]);