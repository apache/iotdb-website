(window.webpackJsonp=window.webpackJsonp||[]).push([[170],{790:function(t,e,s){"use strict";s.r(e);var a=s(80),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"tsfile-文件格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tsfile-文件格式"}},[t._v("#")]),t._v(" TsFile 文件格式")]),t._v(" "),s("h2",{attrs:{id:"_1-tsfile-设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-tsfile-设计"}},[t._v("#")]),t._v(" 1. TsFile 设计")]),t._v(" "),s("p",[t._v("本章是关于 TsFile 的设计细节。")]),t._v(" "),s("h3",{attrs:{id:"_1-1-变量的存储"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-变量的存储"}},[t._v("#")]),t._v(" 1.1 变量的存储")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("数据类型")])]),t._v(" "),s("ul",[s("li",[t._v("0: BOOLEAN")]),t._v(" "),s("li",[t._v("1: INT32 ("),s("code",[t._v("int")]),t._v(")")]),t._v(" "),s("li",[t._v("2: INT64 ("),s("code",[t._v("long")]),t._v(")")]),t._v(" "),s("li",[t._v("3: FLOAT")]),t._v(" "),s("li",[t._v("4: DOUBLE")]),t._v(" "),s("li",[t._v("5: TEXT ("),s("code",[t._v("String")]),t._v(")")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("编码类型")])]),t._v(" "),s("p",[t._v("为了提高数据的存储效率，需要在数据写入的过程中对数据进行编码，从而减少磁盘空间的使用量。在写数据以及读数据的过程中都能够减少I/O操作的数据量从而提高性能。IoTDB支持多种针对不同类型的数据的编码方法：")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("0: PLAIN")])]),t._v(" "),s("ul",[s("li",[t._v("PLAIN编码，默认的编码方式，即不编码，支持多种数据类型，压缩和解压缩的时间效率较高，但空间存储效率较低。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("1: DICTIONARY")])]),t._v(" "),s("ul",[s("li",[t._v("字典编码是一种无损编码。它适合编码基数小的数据（即数据去重后唯一值数量小）。不推荐用于基数大的数据。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("2: RLE")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("游程编码，比较适合存储某些整数值连续出现的序列，不适合编码大部分情况下前后值不一样的序列数据。")])]),t._v(" "),s("li",[s("p",[t._v("游程编码也可用于对浮点数进行编码，但在创建时间序列的时候需指定保留小数位数（MAX_POINT_NUMBER，具体指定方式参见"),s("RouterLink",{attrs:{to:"/zh/UserGuide/Appendix/SQL-Reference.html"}},[t._v("SQL 参考文档")]),t._v("）。比较适合存储某些浮点数值连续出现的序列数据，不适合存储对小数点后精度要求较高以及前后波动较大的序列数据。")],1),t._v(" "),s("blockquote",[s("p",[t._v("游程编码（RLE）和二阶差分编码（TS_2DIFF）对 float 和 double 的编码是有精度限制的，默认保留2位小数。推荐使用 GORILLA。")])])])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("3: DIFF")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("4: TS_2DIFF")])]),t._v(" "),s("ul",[s("li",[t._v("二阶差分编码，比较适合编码单调递增或者递减的序列数据，不适合编码波动较大的数据。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("5: BITMAP")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("6: GORILLA_V1")])]),t._v(" "),s("ul",[s("li",[t._v("GORILLA编码是一种无损编码，它比较适合编码前后值比较接近的数值序列，不适合编码前后波动较大的数据。")]),t._v(" "),s("li",[t._v("当前系统中存在两个版本的GORILLA编码实现，推荐使用"),s("code",[t._v("GORILLA")]),t._v("，不推荐使用"),s("code",[t._v("GORILLA_V1")]),t._v("（已过时）。")]),t._v(" "),s("li",[t._v("使用限制：使用Gorilla编码INT32数据时，需要保证序列中不存在值为"),s("code",[t._v("Integer.MIN_VALUE")]),t._v("的数据点；使用Gorilla编码INT64数据时，需要保证序列中不存在值为"),s("code",[t._v("Long.MIN_VALUE")]),t._v("的数据点。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("7: REGULAR")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("8: GORILLA")])])])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("数据类型与支持编码的对应关系")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("数据类型")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("支持的编码")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("BOOLEAN")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("PLAIN, RLE")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("INT32")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("PLAIN, RLE, TS_2DIFF, GORILLA")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("INT64")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("PLAIN, RLE, TS_2DIFF, GORILLA")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("FLOAT")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("PLAIN, RLE, TS_2DIFF, GORILLA")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("DOUBLE")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("PLAIN, RLE, TS_2DIFF, GORILLA")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("TEXT")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("PLAIN, DICTIONARY")])])])])])]),t._v(" "),s("h3",{attrs:{id:"_1-2-tsfile-概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-tsfile-概述"}},[t._v("#")]),t._v(" 1.2 TsFile 概述")]),t._v(" "),s("p",[t._v("TsFile 整体分为两大部分："),s("strong",[t._v("数据区")]),t._v("和"),s("strong",[t._v("索引区")]),t._v("。")]),t._v(" "),s("p",[s("strong",[t._v("数据区")]),t._v("所包含的概念由小到大有如下三个：")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("Page 数据页")]),t._v("：一段时间序列，是数据块被反序列化的最小单元；")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("Chunk 数据块")]),t._v("：包含一条时间序列的多个 Page ，是数据块被 IO 读取的最小单元；")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("ChunkGroup 数据块组")]),t._v("：包含一个实体的多个 Chunk。")])])]),t._v(" "),s("p",[s("strong",[t._v("索引区")]),t._v("分为三部分：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("按时间序列组织的 "),s("strong",[t._v("TimeseriesIndex")]),t._v("，包含 1 个头信息和数据块索引（ChunkIndex）列表。头信息记录文件内某条时间序列的数据类型、统计信息（最大最小时间戳等）；数据块索引列表记录该序列各 Chunk 在文件中的 offset，并记录相关统计信息（最大最小时间戳等）；")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("IndexOfTimeseriesIndex")]),t._v("，用于索引各 TimeseriesIndex 在文件中的 offset；")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("BloomFilter")]),t._v("，针对实体（Entity）的布隆过滤器。")])])]),t._v(" "),s("blockquote",[s("p",[t._v("注：ChunkIndex 旧称 ChunkMetadata；TimeseriesIndex 旧称 TimeseriesMetadata；IndexOfTimeseriesIndex 旧称 TsFileMetadata。v0.13 版本起，根据其索引区的特性和实际所索引的内容重新命名。")])]),t._v(" "),s("p",[t._v("下图是关于 TsFile 的结构图。")]),t._v(" "),s("img",{staticStyle:{width:"100%","max-width":"800px","max-height":"600px","margin-left":"auto","margin-right":"auto",display:"block"},attrs:{src:"https://user-images.githubusercontent.com/19167280/123542462-6710c180-d77c-11eb-9afb-a1b495c82ea9.png"}}),t._v(" "),s("p",[t._v("此文件包括两个实体 d1、d2，每个实体分别包含三个物理量 s1、s2、s3，共 6 个时间序列。每个时间序列包含两个 Chunk。")]),t._v(" "),s("p",[t._v("TsFile 的查询流程，以查 d1.s1 为例：")]),t._v(" "),s("ul",[s("li",[t._v("反序列化 IndexOfTimeseriesIndex，得到 d1.s1 的 TimeseriesIndex 的位置")]),t._v(" "),s("li",[t._v("反序列化得到 d1.s1 的 TimeseriesIndex")]),t._v(" "),s("li",[t._v("根据 d1.s1 的 TimeseriesIndex，反序列化其所有 ChunkIndex")]),t._v(" "),s("li",[t._v("根据 d1.s1 的每一个 ChunkIndex，读取其 Chunk 数据")])]),t._v(" "),s("h4",{attrs:{id:"_1-2-1-文件签名和版本号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-1-文件签名和版本号"}},[t._v("#")]),t._v(" 1.2.1 文件签名和版本号")]),t._v(" "),s("p",[t._v('TsFile 文件头由 6 个字节的 "Magic String" ('),s("code",[t._v("TsFile")]),t._v(") 和 6 个字节的版本号 ("),s("code",[t._v("000002")]),t._v(") 组成。")]),t._v(" "),s("h4",{attrs:{id:"_1-2-2-数据区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-2-数据区"}},[t._v("#")]),t._v(" 1.2.2 数据区")]),t._v(" "),s("h5",{attrs:{id:"chunkgroup-数据块组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chunkgroup-数据块组"}},[t._v("#")]),t._v(" ChunkGroup 数据块组")]),t._v(" "),s("p",[s("code",[t._v("ChunkGroup")]),t._v(" 存储了一个实体 (Entity) 一段时间的数据。由若干个 "),s("code",[t._v("Chunk")]),t._v(", 一个字节的分隔符 "),s("code",[t._v("0x00")]),t._v(" 和 一个"),s("code",[t._v("ChunkFooter")]),t._v("组成。")]),t._v(" "),s("h5",{attrs:{id:"chunk-数据块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chunk-数据块"}},[t._v("#")]),t._v(" Chunk 数据块")]),t._v(" "),s("p",[t._v("一个 "),s("code",[t._v("Chunk")]),t._v(" 存储了一个物理量 (Measurement) 一段时间的数据，Chunk 内数据是按时间递增序存储的。"),s("code",[t._v("Chunk")]),t._v(" 是由一个字节的分隔符 "),s("code",[t._v("0x01")]),t._v(", 一个 "),s("code",[t._v("ChunkHeader")]),t._v(" 和若干个 "),s("code",[t._v("Page")]),t._v(" 构成。")]),t._v(" "),s("h5",{attrs:{id:"chunkheader-数据块头"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chunkheader-数据块头"}},[t._v("#")]),t._v(" ChunkHeader 数据块头")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("成员")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("类型")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("解释")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("measurementID")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("String")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("传感器名称")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("dataSize")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("chunk 大小")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("dataType")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("TSDataType")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("chunk 的数据类型")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("compressionType")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("CompressionType")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("压缩类型")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("encodingType")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("TSEncoding")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("编码类型")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("numOfPages")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("包含的 page 数量")])])])]),t._v(" "),s("h5",{attrs:{id:"page-数据页"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#page-数据页"}},[t._v("#")]),t._v(" Page 数据页")]),t._v(" "),s("p",[t._v("一个 "),s("code",[t._v("Page")]),t._v(" 页存储了一段时间序列，是数据块被反序列化的最小单元。 它包含一个 "),s("code",[t._v("PageHeader")]),t._v(" 和实际的数据 (time-value 编码的键值对）。")]),t._v(" "),s("p",[t._v("PageHeader 结构：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("成员")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("类型")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("解释")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("uncompressedSize")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("压缩前数据大小")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("compressedSize")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("SNAPPY 压缩后数据大小")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("statistics")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Statistics")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("统计量")])])])]),t._v(" "),s("p",[t._v("这里是"),s("code",[t._v("statistics")]),t._v("的详细信息：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("成员")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("描述")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("DoubleStatistics")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("FloatStatistics")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("IntegerStatistics")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("LongStatistics")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("BinaryStatistics")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("BooleanStatistics")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("count")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("数据点个数")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("long")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("startTime")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("开始时间")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("long")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("endTime")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("结束时间")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("long")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("minValue")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("最小值")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("double")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("float")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("-")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("maxValue")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("最大值")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("double")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("float")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("-")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("firstValue")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("第一个值")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("double")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("float")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Binary")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("boolean")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("lastValue")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("最后一个值")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("double")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("float")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Binary")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("boolean")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("sumValue")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("和")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("double")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("double")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("double")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("double")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("-")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("-")])])])]),t._v(" "),s("h5",{attrs:{id:"chunkgroupfooter-数据块组结尾"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chunkgroupfooter-数据块组结尾"}},[t._v("#")]),t._v(" ChunkGroupFooter 数据块组结尾")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("成员")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("类型")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("解释")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("entityID")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("String")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("实体名称")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("dataSize")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("ChunkGroup 大小")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("numberOfChunks")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("包含的 chunks 的数量")])])])]),t._v(" "),s("h4",{attrs:{id:"_1-2-3-索引区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-3-索引区"}},[t._v("#")]),t._v(" 1.2.3  索引区")]),t._v(" "),s("h5",{attrs:{id:"_1-2-3-1-chunkindex-数据块索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-3-1-chunkindex-数据块索引"}},[t._v("#")]),t._v(" 1.2.3.1 ChunkIndex 数据块索引")]),t._v(" "),s("p",[t._v("第一部分的索引是 "),s("code",[t._v("ChunkIndex")]),t._v(" ：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("成员")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("类型")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("解释")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("measurementUid")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("String")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("传感器名称")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("offsetOfChunkHeader")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("文件中 ChunkHeader 开始的偏移量")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("tsDataType")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("TSDataType")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("数据类型")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("statistics")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Statistics")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("统计量")])])])]),t._v(" "),s("h5",{attrs:{id:"_1-2-3-2-timeseriesindex-时间序列索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-3-2-timeseriesindex-时间序列索引"}},[t._v("#")]),t._v(" 1.2.3.2 TimeseriesIndex 时间序列索引")]),t._v(" "),s("p",[t._v("第二部分的索引是 "),s("code",[t._v("TimeseriesIndex")]),t._v("：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("成员")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("类型")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("解释")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("measurementUid")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("String")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("物理量名称")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("tsDataType")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("TSDataType")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("数据类型")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("startOffsetOfChunkIndexList")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("文件中 ChunkIndex 列表开始的偏移量")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("ChunkIndexListDataSize")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("ChunkIndex 列表的大小")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("statistics")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Statistics")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("统计量")])])])]),t._v(" "),s("h5",{attrs:{id:"_1-2-3-3-indexoftimeseriesindex-时间序列索引的索引-二级索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-3-3-indexoftimeseriesindex-时间序列索引的索引-二级索引"}},[t._v("#")]),t._v(" 1.2.3.3 IndexOfTimeseriesIndex 时间序列索引的索引（二级索引）")]),t._v(" "),s("p",[t._v("第三部分的索引是 "),s("code",[t._v("IndexOfTimeseriesIndex")]),t._v("：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("成员")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("类型")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("解释")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("IndexTree")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("IndexNode")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("索引节点")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("offsetOfIndexArea")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("索引区的偏移量")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("bloomFilter")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("BloomFilter")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("布隆过滤器")])])])]),t._v(" "),s("p",[t._v("索引节点 (IndexNode) 的成员和类型具体如下：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("成员")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("类型")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("解释")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("children")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("List"),s("IndexEntry")],1),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("节点索引项列表")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("endOffset")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("此索引节点的结束偏移量")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("nodeType")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("IndexNodeType")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("节点类型")])])])]),t._v(" "),s("p",[t._v("索引项 (MetadataIndexEntry) 的成员和类型具体如下：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("成员")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("类型")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("解释")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("name")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("String")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("对应实体或物理量的名字")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("offset")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("偏移量")])])])]),t._v(" "),s("p",[t._v("所有的索引节点构成一棵类 B+树结构的"),s("strong",[t._v("索引树（二级索引）")]),t._v("，这棵树由两部分组成：实体索引部分和物理量索引部分。索引节点类型有四种，分别是"),s("code",[t._v("INTERNAL_ENTITY")]),t._v("、"),s("code",[t._v("LEAF_ENTITY")]),t._v("、"),s("code",[t._v("INTERNAL_MEASUREMENT")]),t._v("、"),s("code",[t._v("LEAF_MEASUREMENT")]),t._v("，分别对应实体索引部分的中间节点和叶子节点，和物理量索引部分的中间节点和叶子节点。 只有物理量索引部分的叶子节点 ("),s("code",[t._v("LEAF_MEASUREMENT")]),t._v(") 指向 "),s("code",[t._v("TimeseriesIndex")]),t._v("。")]),t._v(" "),s("p",[t._v("考虑多元时间序列的引入，每个多元时间序列称为一个vector，有一个"),s("code",[t._v("TimeColumn")]),t._v("，例如d1实体下的多元时间序列vector1，有s1、s2两个物理量，即"),s("code",[t._v("d1.vector1.(s1,s2)")]),t._v("，我们称vector1为"),s("code",[t._v("TimeColumn")]),t._v("，在存储的时候需要多存储一个vector1的Chunk。")]),t._v(" "),s("p",[t._v("构建"),s("code",[t._v("IndexOfTimeseriesIndex")]),t._v("时，对于多元时间序列的非"),s("code",[t._v("TimeValue")]),t._v("的物理量量，使用与"),s("code",[t._v("TimeValue")]),t._v("拼接的方式，例如"),s("code",[t._v("vector1.s1")]),t._v("视为“物理量”。")]),t._v(" "),s("blockquote",[s("p",[t._v("注：从0.13起，系统支持"),s("a",{attrs:{href:"https://iotdb.apache.org/zh/UserGuide/Master/Data-Concept/Data-Model-and-Terminology.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("多元时间序列"),s("OutboundLink")],1),t._v("（Multi-variable timeseries 或 Aligned timeseries），一个实体的一个多元物理量对应一个多元时间序列。这些时间序列称为"),s("strong",[t._v("多元时间序列")]),t._v("，也叫"),s("strong",[t._v("对齐时间序列")]),t._v("。多元时间序列需要被同时创建、同时插入值，删除时也必须同时删除，一组多元序列的时间戳列在内存和磁盘中仅需存储一次，而不是每个时间序列存储一次。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cwiki.apache.org/confluence/download/attachments/184617773/image-20210720151044629.png?version=1&modificationDate=1626773824000&api=v2",alt:"img"}})])]),t._v(" "),s("p",[t._v("下面，我们使用七个例子来加以详细说明。")]),t._v(" "),s("p",[t._v("索引树节点的度（即每个节点的最大子节点个数）可以由用户进行配置，配置项为"),s("code",[t._v("max_degree_of_index_node")]),t._v("，其默认值为 256。在以下例子中，我们假定 "),s("code",[t._v("max_degree_of_index_node = 10")]),t._v("。")]),t._v(" "),s("p",[t._v("需要注意的是，在索引树的每类节点（ENTITY、MEASUREMENT）中，键按照字典序排列。在下面的例子中，若i<j，假设字典序di<dj。（否则，实际上[d1,d2,...d10]的字典序排列应该为[d1,d10,d2,...d9]）")]),t._v(" "),s("p",[t._v("其中，例1~4为一元时间序列的例子，例5~6为多元时间序列的例子，例7为综合例子。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("例 1：5 个实体，每个实体有 5 个物理量")])])]),t._v(" "),s("img",{staticStyle:{width:"100%","max-width":"800px","max-height":"600px","margin-left":"auto","margin-right":"auto",display:"block"},attrs:{src:"https://user-images.githubusercontent.com/19167280/125254013-9d2d7400-e32c-11eb-9f95-1663e14cffbb.png"}}),t._v(" "),s("p",[t._v("在 5 个实体，每个实体有 5 个物理量的情况下，由于实体数和物理量数均不超过 "),s("code",[t._v("max_degree_of_index_node")]),t._v("，因此索引树只有默认的物理量部分。在这部分中，每个 IndexNode 最多由 10 个 IndexEntry 组成。根节点是 "),s("code",[t._v("LEAF_ENTITY")]),t._v(" 类型，其中的 5 个 IndexEntry 指向对应的实体的 IndexNode，这些节点直接指向 "),s("code",[t._v("TimeseriesIndex")]),t._v("，是 "),s("code",[t._v("LEAF_MEASUREMENT")]),t._v("。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("例 2：1 个实体，150 个物理量")])])]),t._v(" "),s("img",{staticStyle:{width:"100%","max-width":"800px","max-height":"600px","margin-left":"auto","margin-right":"auto",display:"block"},attrs:{src:"https://user-images.githubusercontent.com/19167280/125254022-a0c0fb00-e32c-11eb-8fd1-462936358288.png"}}),t._v(" "),s("p",[t._v("在 1 个实体，实体中有 150 个物理量的情况下，物理量个数超过了 "),s("code",[t._v("max_degree_of_index_node")]),t._v("，索引树有默认的物理量层级。在这个层级里，每个 IndexNode 最多由 10 个 IndexEntry 组成。直接指向 "),s("code",[t._v("TimeseriesIndex")]),t._v("的节点类型均为 "),s("code",[t._v("LEAF_MEASUREMENT")]),t._v("；而后续产生的中间节点不是物理量索引层级的叶子节点，这些节点是 "),s("code",[t._v("INTERNAL_MEASUREMENT")]),t._v("；根节点是 "),s("code",[t._v("LEAF_ENTITY")]),t._v(" 类型。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("例 3：150 个实体，每个实体有 1 个物理量")])])]),t._v(" "),s("img",{staticStyle:{width:"100%","max-width":"800px","max-height":"600px","margin-left":"auto","margin-right":"auto",display:"block"},attrs:{src:"https://user-images.githubusercontent.com/19167280/122771008-9a64d380-d2d8-11eb-9044-5ac794dd38f7.png"}}),t._v(" "),s("p",[t._v("在 150 个实体，每个实体中有 1 个物理量的情况下，实体个数超过了 "),s("code",[t._v("max_degree_of_index_node")]),t._v("，形成索引树的物理量层级和实体索引层级。在这两个层级里，每个 IndexNode 最多由 10 个 IndexEntry 组成。直接指向 "),s("code",[t._v("TimeseriesIndex")]),t._v(" 的节点类型为 "),s("code",[t._v("LEAF_MEASUREMENT")]),t._v("，物理量索引层级的根节点同时作为实体索引层级的叶子节点，其节点类型为 "),s("code",[t._v("LEAF_ENTITY")]),t._v("；而后续产生的中间节点和根节点不是实体索引层级的叶子节点，因此节点类型为 "),s("code",[t._v("INTERNAL_ENTITY")]),t._v("。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("例 4：150 个实体，每个实体有 150 个物理量")])])]),t._v(" "),s("img",{staticStyle:{width:"100%","max-width":"800px","max-height":"600px","margin-left":"auto","margin-right":"auto",display:"block"},attrs:{src:"https://user-images.githubusercontent.com/19167280/122677241-1a753580-d214-11eb-817f-17bcf797251f.png"}}),t._v(" "),s("p",[t._v("在 150 个实体，每个实体中有 150 个物理量的情况下，物理量和实体个数均超过了 "),s("code",[t._v("max_degree_of_index_node")]),t._v("，形成索引树的物理量层级和实体索引层级。在这两个层级里，每个 IndexNode 均最多由 10 个 IndexEntry 组成。如前所述，从根节点到实体索引层级的叶子节点，类型分别为"),s("code",[t._v("INTERNAL_ENTITY")]),t._v(" 和 "),s("code",[t._v("LEAF_ENTITY")]),t._v("，而每个实体索引层级的叶子节点都是物理量索引层级的根节点，从这里到物理量索引层级的叶子节点，类型分别为"),s("code",[t._v("INTERNAL_MEASUREMENT")]),t._v(" 和 "),s("code",[t._v("LEAF_MEASUREMENT")]),t._v("。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("例 5：1 个实体，18 个物理量，2 个多元时间序列组，每个多元时间序列组分别有 9 个物理量")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cwiki.apache.org/confluence/download/attachments/184617773/tsFileVectorIndexCase5.png?version=2&modificationDate=1626952911868&api=v2",alt:"img"}})]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("例 6：1 个实体，30 个物理量，2 个多元时间序列组，每个多元时间序列组分别有 15 个物理量")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cwiki.apache.org/confluence/download/attachments/184617773/tsFileVectorIndexCase6.png?version=2&modificationDate=1626952911054&api=v2",alt:"img"}})]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("例 7：2 个实体，每个实体的物理量如下表所示")])])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("d0")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("d1")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("【一元时间序列】s0,s1...,s4")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("【一元时间序列】s0,s1,...s14")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("【多元时间序列】v0.(s5,s6,...,s14)")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("【多元时间序列】v0.(s15,s16,..s18)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("【一元时间序列】z15,z16,..,z18")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}})])])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://cwiki.apache.org/confluence/download/attachments/184617773/tsFileVectorIndexCase7.png?version=2&modificationDate=1626952910746&api=v2",alt:"img"}})]),t._v(" "),s("p",[t._v("索引采用树形结构进行设计的目的是在实体数或者物理量数量过大时，可以不用一次读取所有的 "),s("code",[t._v("TimeseriesIndex")]),t._v("，只需要根据所读取的物理量定位对应的节点，从而减少 I/O，加快查询速度。有关 TsFile 的读流程将在本章最后一节加以详细说明。")]),t._v(" "),s("h4",{attrs:{id:"_1-2-4-magic-string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-4-magic-string"}},[t._v("#")]),t._v(" 1.2.4 Magic String")]),t._v(" "),s("p",[t._v("TsFile 是以 6 个字节的 magic string ("),s("code",[t._v("TsFile")]),t._v(") 作为结束。")]),t._v(" "),s("p",[t._v("恭喜您，至此您已经完成了 TsFile 的探秘之旅，祝您玩儿的开心！")]),t._v(" "),s("h2",{attrs:{id:"_2-tsfile-的总览图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-tsfile-的总览图"}},[t._v("#")]),t._v(" 2 TsFile 的总览图")]),t._v(" "),s("h3",{attrs:{id:"v0-8"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v0-8"}},[t._v("#")]),t._v(" v0.8")]),t._v(" "),s("img",{staticStyle:{width:"100%","max-width":"800px","max-height":"600px","margin-left":"auto","margin-right":"auto",display:"block"},attrs:{src:"https://user-images.githubusercontent.com/33376433/65209576-2bd36000-dacb-11e9-9e43-49e0dd01274e.png"}}),t._v(" "),s("h3",{attrs:{id:"v0-9-000001"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v0-9-000001"}},[t._v("#")]),t._v(" v0.9 / 000001")]),t._v(" "),s("img",{staticStyle:{width:"100%","max-width":"800px","max-height":"600px","margin-left":"auto","margin-right":"auto",display:"block"},attrs:{src:"https://user-images.githubusercontent.com/33376433/69341240-26012300-0ca4-11ea-91a1-d516810cad44.png"}}),t._v(" "),s("h3",{attrs:{id:"v0-10-000002"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v0-10-000002"}},[t._v("#")]),t._v(" v0.10 / 000002")]),t._v(" "),s("img",{staticStyle:{width:"100%","max-width":"800px","max-height":"600px","margin-left":"auto","margin-right":"auto",display:"block"},attrs:{src:"https://user-images.githubusercontent.com/19167280/95296983-492cc500-08ac-11eb-9f66-c9c78401c61d.png"}}),t._v(" "),s("h3",{attrs:{id:"v0-12-000003"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v0-12-000003"}},[t._v("#")]),t._v(" v0.12 / 000003")]),t._v(" "),s("img",{staticStyle:{width:"100%","max-width":"800px","max-height":"600px","margin-left":"auto","margin-right":"auto",display:"block"},attrs:{src:"https://user-images.githubusercontent.com/33376433/123052025-f47aab80-d434-11eb-94c2-9b75429e5c54.png"}}),t._v(" "),s("h2",{attrs:{id:"_3-tsfile-工具集"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-tsfile-工具集"}},[t._v("#")]),t._v(" 3 TsFile 工具集")]),t._v(" "),s("h3",{attrs:{id:"_3-1-iotdb-data-directory-快速概览工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-iotdb-data-directory-快速概览工具"}},[t._v("#")]),t._v(" 3.1 IoTDB Data Directory 快速概览工具")]),t._v(" "),s("p",[t._v("该工具的启动脚本会在编译 server 之后生成至 "),s("code",[t._v("server\\target\\iotdb-server-{version}\\tools\\tsfileToolSet")]),t._v(" 目录中。")]),t._v(" "),s("p",[t._v("使用方式：")]),t._v(" "),s("p",[t._v("For Windows:")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(".\\print-iotdb-data-dir.bat <IoTDB 数据文件夹路径，如果是多个文件夹用逗号分隔> (<输出结果的存储路径>) \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("For Linux or MacOs:")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("./print-iotdb-data-dir.sh <IoTDB 数据文件夹路径，如果是多个文件夹用逗号分隔> (<输出结果的存储路径>) \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("在 Windows 系统中的示例：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("D:\\iotdb\\server\\target\\iotdb-server-{version}\\tools\\tsfileToolSet>.\\print-iotdb-data-dir.bat D:\\\\data\\data\n｜````````````````````````\nStarting Printing the IoTDB Data Directory Overview\n｜````````````````````````\noutput save path:IoTDB_data_dir_overview.txt\nTsFile data dir num:1\n21:17:38.841 [main] WARN org.apache.iotdb.tsfile.common.conf.TSFileDescriptor - Failed to find config file iotdb-engine.properties at classpath, use default configuration\n|==============================================================\n|D:\\\\data\\data\n|--sequence\n|  |--root.ln.wf01.wt01\n|  |  |--1575813520203-101-0.tsfile\n|  |  |--1575813520203-101-0.tsfile.resource\n|  |  |  |--device root.ln.wf01.wt01, start time 1 (1970-01-01T08:00:00.001+08:00[GMT+08:00]), end time 5 (1970-01-01T08:00:00.005+08:00[GMT+08:00])\n|  |  |--1575813520669-103-0.tsfile\n|  |  |--1575813520669-103-0.tsfile.resource\n|  |  |  |--device root.ln.wf01.wt01, start time 100 (1970-01-01T08:00:00.100+08:00[GMT+08:00]), end time 300 (1970-01-01T08:00:00.300+08:00[GMT+08:00])\n|  |  |--1575813521372-107-0.tsfile\n|  |  |--1575813521372-107-0.tsfile.resource\n|  |  |  |--device root.ln.wf01.wt01, start time 500 (1970-01-01T08:00:00.500+08:00[GMT+08:00]), end time 540 (1970-01-01T08:00:00.540+08:00[GMT+08:00])\n|--unsequence\n|  |--root.ln.wf01.wt01\n|  |  |--1575813521063-105-0.tsfile\n|  |  |--1575813521063-105-0.tsfile.resource\n|  |  |  |--device root.ln.wf01.wt01, start time 10 (1970-01-01T08:00:00.010+08:00[GMT+08:00]), end time 50 (1970-01-01T08:00:00.050+08:00[GMT+08:00])\n|==============================================================\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br")])]),s("h3",{attrs:{id:"_3-2-tsfileresource-打印工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-tsfileresource-打印工具"}},[t._v("#")]),t._v(" 3.2 TsFileResource 打印工具")]),t._v(" "),s("p",[t._v("该工具的启动脚本会在编译 server 之后生成至 "),s("code",[t._v("server\\target\\iotdb-server-{version}\\tools\\tsfileToolSet")]),t._v(" 目录中。")]),t._v(" "),s("p",[t._v("使用方式：")]),t._v(" "),s("p",[t._v("Windows:")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(".\\print-tsfile-resource-files.bat <TsFileResource 文件夹路径>\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("Linux or MacOs:")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("./print-tsfile-resource-files.sh <TsFileResource 文件夹路径>\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("在 Windows 系统中的示例：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("D:\\iotdb\\server\\target\\iotdb-server-{version}\\tools\\tsfileToolSet>.\\print-tsfile-resource-files.bat D:\\data\\data\\sequence\\root.vehicle\n｜````````````````````````\nStarting Printing the TsFileResources\n｜````````````````````````\n12:31:59.861 [main] WARN org.apache.iotdb.db.conf.IoTDBDescriptor - Cannot find IOTDB_HOME or IOTDB_CONF environment variable when loading config file iotdb-engine.properties, use default configuration\nanalyzing D:\\data\\data\\sequence\\root.vehicle\\1572496142067-101-0.tsfile ...\ndevice root.vehicle.d0, start time 3000 (1970-01-01T08:00:03+08:00[GMT+08:00]), end time 100999 (1970-01-01T08:01:40.999+08:00[GMT+08:00])\nanalyzing the resource file finished.\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("h3",{attrs:{id:"_3-3-tsfile-描述工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-tsfile-描述工具"}},[t._v("#")]),t._v(" 3.3 TsFile 描述工具")]),t._v(" "),s("p",[t._v("该工具的启动脚本会在编译 server 之后生成至 "),s("code",[t._v("server\\target\\iotdb-server-{version}\\tools\\tsfileToolSet")]),t._v(" 目录中。")]),t._v(" "),s("p",[t._v("使用方式：")]),t._v(" "),s("p",[t._v("Windows:")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(".\\print-tsfile-sketch.bat <TsFile 文件路径> (<输出结果的存储路径>) \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("ul",[s("li",[t._v('注意：如果没有设置输出文件的存储路径，将使用 "TsFile_sketch_view.txt" 做为默认值。')])]),t._v(" "),s("p",[t._v("Linux or MacOs:")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("./print-tsfile-sketch.sh <TsFile 文件路径> (<输出结果的存储路径>) \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("ul",[s("li",[t._v('注意：如果没有设置输出文件的存储路径，将使用 "TsFile_sketch_view.txt" 做为默认值。')])]),t._v(" "),s("p",[t._v("在 mac 系统中的示例：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("/iotdb/server/target/iotdb-server-{version}/tools/tsfileToolSet$ ./print-tsfile-sketch.sh test.tsfile\n｜````````````````````````\nStarting Printing the TsFile Sketch\n｜````````````````````````\nTsFile path:test.tsfile\nSketch save path:TsFile_sketch_view.txt\n-------------------------------- TsFile Sketch --------------------------------\nfile path: test.tsfile\nfile length: 15462\n14:40:55.619 [main] INFO org.apache.iotdb.tsfile.read.TsFileSequenceReader - Start reading file test.tsfile metadata from 15356, length 96\n\n            POSITION|\tCONTENT\n            -------- \t-------\n                   0|\t[magic head] TsFile\n                   6|\t[version number] 3\n|||||||||||||||||||||\t[Chunk Group] of root.sg_1.d1, num of Chunks:4\n                   7|\t[Chunk Group Header]\n                    |\t\t[marker] 0\n                    |\t\t[deviceID] root.sg_1.d1\n                  21|\t[Chunk] of s6, numOfPoints:1000, time range:[0,999], tsDataType:INT64, \n                     \tstartTime: 0 endTime: 999 count: 1000 [minValue:6,maxValue:9996,firstValue:6,lastValue:9996,sumValue:5001000.0]\n                    |\t\t[chunk header] marker=5, measurementId=s6, dataSize=1826, serializedSize=9\n                    |\t\t[chunk] java.nio.HeapByteBuffer[pos=0 lim=1826 cap=1826]\n                    |\t\t[page]  CompressedSize:1822, UncompressedSize:1951\n                1856|\t[Chunk] of s4, numOfPoints:1000, time range:[0,999], tsDataType:INT64, \n                     \tstartTime: 0 endTime: 999 count: 1000 [minValue:4,maxValue:9994,firstValue:4,lastValue:9994,sumValue:4999000.0]\n                    |\t\t[chunk header] marker=5, measurementId=s4, dataSize=1826, serializedSize=9\n                    |\t\t[chunk] java.nio.HeapByteBuffer[pos=0 lim=1826 cap=1826]\n                    |\t\t[page]  CompressedSize:1822, UncompressedSize:1951\n                3691|\t[Chunk] of s2, numOfPoints:1000, time range:[0,999], tsDataType:INT64, \n                     \tstartTime: 0 endTime: 999 count: 1000 [minValue:3,maxValue:9993,firstValue:3,lastValue:9993,sumValue:4998000.0]\n                    |\t\t[chunk header] marker=5, measurementId=s2, dataSize=1826, serializedSize=9\n                    |\t\t[chunk] java.nio.HeapByteBuffer[pos=0 lim=1826 cap=1826]\n                    |\t\t[page]  CompressedSize:1822, UncompressedSize:1951\n                5526|\t[Chunk] of s5, numOfPoints:1000, time range:[0,999], tsDataType:INT64, \n                     \tstartTime: 0 endTime: 999 count: 1000 [minValue:5,maxValue:9995,firstValue:5,lastValue:9995,sumValue:5000000.0]\n                    |\t\t[chunk header] marker=5, measurementId=s5, dataSize=1826, serializedSize=9\n                    |\t\t[chunk] java.nio.HeapByteBuffer[pos=0 lim=1826 cap=1826]\n                    |\t\t[page]  CompressedSize:1822, UncompressedSize:1951\n|||||||||||||||||||||\t[Chunk Group] of root.sg_1.d1 ends\n|||||||||||||||||||||\t[Chunk Group] of root.sg_1.d2, num of Chunks:4\n                7361|\t[Chunk Group Header]\n                    |\t\t[marker] 0\n                    |\t\t[deviceID] root.sg_1.d2\n                7375|\t[Chunk] of s2, numOfPoints:1000, time range:[0,999], tsDataType:INT64, \n                     \tstartTime: 0 endTime: 999 count: 1000 [minValue:3,maxValue:9993,firstValue:3,lastValue:9993,sumValue:4998000.0]\n                    |\t\t[chunk header] marker=5, measurementId=s2, dataSize=1826, serializedSize=9\n                    |\t\t[chunk] java.nio.HeapByteBuffer[pos=0 lim=1826 cap=1826]\n                    |\t\t[page]  CompressedSize:1822, UncompressedSize:1951\n                9210|\t[Chunk] of s4, numOfPoints:1000, time range:[0,999], tsDataType:INT64, \n                     \tstartTime: 0 endTime: 999 count: 1000 [minValue:4,maxValue:9994,firstValue:4,lastValue:9994,sumValue:4999000.0]\n                    |\t\t[chunk header] marker=5, measurementId=s4, dataSize=1826, serializedSize=9\n                    |\t\t[chunk] java.nio.HeapByteBuffer[pos=0 lim=1826 cap=1826]\n                    |\t\t[page]  CompressedSize:1822, UncompressedSize:1951\n               11045|\t[Chunk] of s6, numOfPoints:1000, time range:[0,999], tsDataType:INT64, \n                     \tstartTime: 0 endTime: 999 count: 1000 [minValue:6,maxValue:9996,firstValue:6,lastValue:9996,sumValue:5001000.0]\n                    |\t\t[chunk header] marker=5, measurementId=s6, dataSize=1826, serializedSize=9\n                    |\t\t[chunk] java.nio.HeapByteBuffer[pos=0 lim=1826 cap=1826]\n                    |\t\t[page]  CompressedSize:1822, UncompressedSize:1951\n               12880|\t[Chunk] of s5, numOfPoints:1000, time range:[0,999], tsDataType:INT64, \n                     \tstartTime: 0 endTime: 999 count: 1000 [minValue:5,maxValue:9995,firstValue:5,lastValue:9995,sumValue:5000000.0]\n                    |\t\t[chunk header] marker=5, measurementId=s5, dataSize=1826, serializedSize=9\n                    |\t\t[chunk] java.nio.HeapByteBuffer[pos=0 lim=1826 cap=1826]\n                    |\t\t[page]  CompressedSize:1822, UncompressedSize:1951\n|||||||||||||||||||||\t[Chunk Group] of root.sg_1.d2 ends\n               14715|\t[marker] 2\n               14716|\t[TimeseriesIndex] of root.sg_1.d1.s2, tsDataType:INT64\n                    |\t\t[ChunkIndex] s2, offset=3691\n                    |\t\t[startTime: 0 endTime: 999 count: 1000 [minValue:3,maxValue:9993,firstValue:3,lastValue:9993,sumValue:4998000.0]] \n               14788|\t[TimeseriesIndex] of root.sg_1.d1.s4, tsDataType:INT64\n                    |\t\t[ChunkIndex] s4, offset=1856\n                    |\t\t[startTime: 0 endTime: 999 count: 1000 [minValue:4,maxValue:9994,firstValue:4,lastValue:9994,sumValue:4999000.0]] \n               14860|\t[TimeseriesIndex] of root.sg_1.d1.s5, tsDataType:INT64\n                    |\t\t[ChunkIndex] s5, offset=5526\n                    |\t\t[startTime: 0 endTime: 999 count: 1000 [minValue:5,maxValue:9995,firstValue:5,lastValue:9995,sumValue:5000000.0]] \n               14932|\t[TimeseriesIndex] of root.sg_1.d1.s6, tsDataType:INT64\n                    |\t\t[ChunkIndex] s6, offset=21\n                    |\t\t[startTime: 0 endTime: 999 count: 1000 [minValue:6,maxValue:9996,firstValue:6,lastValue:9996,sumValue:5001000.0]] \n               15004|\t[TimeseriesIndex] of root.sg_1.d2.s2, tsDataType:INT64\n                    |\t\t[ChunkIndex] s2, offset=7375\n                    |\t\t[startTime: 0 endTime: 999 count: 1000 [minValue:3,maxValue:9993,firstValue:3,lastValue:9993,sumValue:4998000.0]] \n               15076|\t[TimeseriesIndex] of root.sg_1.d2.s4, tsDataType:INT64\n                    |\t\t[ChunkIndex] s4, offset=9210\n                    |\t\t[startTime: 0 endTime: 999 count: 1000 [minValue:4,maxValue:9994,firstValue:4,lastValue:9994,sumValue:4999000.0]] \n               15148|\t[TimeseriesIndex] of root.sg_1.d2.s5, tsDataType:INT64\n                    |\t\t[ChunkIndex] s5, offset=12880\n                    |\t\t[startTime: 0 endTime: 999 count: 1000 [minValue:5,maxValue:9995,firstValue:5,lastValue:9995,sumValue:5000000.0]] \n               15220|\t[TimeseriesIndex] of root.sg_1.d2.s6, tsDataType:INT64\n                    |\t\t[ChunkIndex] s6, offset=11045\n                    |\t\t[startTime: 0 endTime: 999 count: 1000 [minValue:6,maxValue:9996,firstValue:6,lastValue:9996,sumValue:5001000.0]] \n|||||||||||||||||||||\n               15292|\t[IndexOfTimerseriesIndex Node] type=LEAF_MEASUREMENT\n                    |\t\t<s2, 14716>\n                    |\t\t<s6, 14932>\n                    |\t\t<endOffset, 15004>\n               15324|\t[IndexOfTimerseriesIndex Node] type=LEAF_MEASUREMENT\n                    |\t\t<s2, 15004>\n                    |\t\t<s6, 15220>\n                    |\t\t<endOffset, 15292>\n               15356|\t[TsFileMetadata]\n                    |\t\t[meta offset] 14715\n                    |\t\t[num of devices] 2\n                    |\t\t2 key&TsMetadataIndex\n                    |\t\t[bloom filter bit vector byte array length] 32\n                    |\t\t[bloom filter bit vector byte array] \n                    |\t\t[bloom filter number of bits] 256\n                    |\t\t[bloom filter number of hash functions] 5\n               15452|\t[TsFileMetadataSize] 96\n               15456|\t[magic tail] TsFile\n               15462|\tEND of TsFile\n---------------------------- IndexOfTimerseriesIndex Tree -----------------------------\n\t[MetadataIndex:LEAF_DEVICE]\n\t└───[root.sg_1.d1,15292]\n\t\t\t[MetadataIndex:LEAF_MEASUREMENT]\n\t\t\t└───[s2,14716]\n\t\t\t└───[s6,14932]\n\t└───[root.sg_1.d2,15324]\n\t\t\t[MetadataIndex:LEAF_MEASUREMENT]\n\t\t\t└───[s2,15004]\n\t\t\t└───[s6,15220]]\n---------------------------------- TsFile Sketch End ----------------------------------\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br"),s("span",{staticClass:"line-number"},[t._v("39")]),s("br"),s("span",{staticClass:"line-number"},[t._v("40")]),s("br"),s("span",{staticClass:"line-number"},[t._v("41")]),s("br"),s("span",{staticClass:"line-number"},[t._v("42")]),s("br"),s("span",{staticClass:"line-number"},[t._v("43")]),s("br"),s("span",{staticClass:"line-number"},[t._v("44")]),s("br"),s("span",{staticClass:"line-number"},[t._v("45")]),s("br"),s("span",{staticClass:"line-number"},[t._v("46")]),s("br"),s("span",{staticClass:"line-number"},[t._v("47")]),s("br"),s("span",{staticClass:"line-number"},[t._v("48")]),s("br"),s("span",{staticClass:"line-number"},[t._v("49")]),s("br"),s("span",{staticClass:"line-number"},[t._v("50")]),s("br"),s("span",{staticClass:"line-number"},[t._v("51")]),s("br"),s("span",{staticClass:"line-number"},[t._v("52")]),s("br"),s("span",{staticClass:"line-number"},[t._v("53")]),s("br"),s("span",{staticClass:"line-number"},[t._v("54")]),s("br"),s("span",{staticClass:"line-number"},[t._v("55")]),s("br"),s("span",{staticClass:"line-number"},[t._v("56")]),s("br"),s("span",{staticClass:"line-number"},[t._v("57")]),s("br"),s("span",{staticClass:"line-number"},[t._v("58")]),s("br"),s("span",{staticClass:"line-number"},[t._v("59")]),s("br"),s("span",{staticClass:"line-number"},[t._v("60")]),s("br"),s("span",{staticClass:"line-number"},[t._v("61")]),s("br"),s("span",{staticClass:"line-number"},[t._v("62")]),s("br"),s("span",{staticClass:"line-number"},[t._v("63")]),s("br"),s("span",{staticClass:"line-number"},[t._v("64")]),s("br"),s("span",{staticClass:"line-number"},[t._v("65")]),s("br"),s("span",{staticClass:"line-number"},[t._v("66")]),s("br"),s("span",{staticClass:"line-number"},[t._v("67")]),s("br"),s("span",{staticClass:"line-number"},[t._v("68")]),s("br"),s("span",{staticClass:"line-number"},[t._v("69")]),s("br"),s("span",{staticClass:"line-number"},[t._v("70")]),s("br"),s("span",{staticClass:"line-number"},[t._v("71")]),s("br"),s("span",{staticClass:"line-number"},[t._v("72")]),s("br"),s("span",{staticClass:"line-number"},[t._v("73")]),s("br"),s("span",{staticClass:"line-number"},[t._v("74")]),s("br"),s("span",{staticClass:"line-number"},[t._v("75")]),s("br"),s("span",{staticClass:"line-number"},[t._v("76")]),s("br"),s("span",{staticClass:"line-number"},[t._v("77")]),s("br"),s("span",{staticClass:"line-number"},[t._v("78")]),s("br"),s("span",{staticClass:"line-number"},[t._v("79")]),s("br"),s("span",{staticClass:"line-number"},[t._v("80")]),s("br"),s("span",{staticClass:"line-number"},[t._v("81")]),s("br"),s("span",{staticClass:"line-number"},[t._v("82")]),s("br"),s("span",{staticClass:"line-number"},[t._v("83")]),s("br"),s("span",{staticClass:"line-number"},[t._v("84")]),s("br"),s("span",{staticClass:"line-number"},[t._v("85")]),s("br"),s("span",{staticClass:"line-number"},[t._v("86")]),s("br"),s("span",{staticClass:"line-number"},[t._v("87")]),s("br"),s("span",{staticClass:"line-number"},[t._v("88")]),s("br"),s("span",{staticClass:"line-number"},[t._v("89")]),s("br"),s("span",{staticClass:"line-number"},[t._v("90")]),s("br"),s("span",{staticClass:"line-number"},[t._v("91")]),s("br"),s("span",{staticClass:"line-number"},[t._v("92")]),s("br"),s("span",{staticClass:"line-number"},[t._v("93")]),s("br"),s("span",{staticClass:"line-number"},[t._v("94")]),s("br"),s("span",{staticClass:"line-number"},[t._v("95")]),s("br"),s("span",{staticClass:"line-number"},[t._v("96")]),s("br"),s("span",{staticClass:"line-number"},[t._v("97")]),s("br"),s("span",{staticClass:"line-number"},[t._v("98")]),s("br"),s("span",{staticClass:"line-number"},[t._v("99")]),s("br"),s("span",{staticClass:"line-number"},[t._v("100")]),s("br"),s("span",{staticClass:"line-number"},[t._v("101")]),s("br"),s("span",{staticClass:"line-number"},[t._v("102")]),s("br"),s("span",{staticClass:"line-number"},[t._v("103")]),s("br"),s("span",{staticClass:"line-number"},[t._v("104")]),s("br"),s("span",{staticClass:"line-number"},[t._v("105")]),s("br"),s("span",{staticClass:"line-number"},[t._v("106")]),s("br"),s("span",{staticClass:"line-number"},[t._v("107")]),s("br"),s("span",{staticClass:"line-number"},[t._v("108")]),s("br"),s("span",{staticClass:"line-number"},[t._v("109")]),s("br"),s("span",{staticClass:"line-number"},[t._v("110")]),s("br"),s("span",{staticClass:"line-number"},[t._v("111")]),s("br"),s("span",{staticClass:"line-number"},[t._v("112")]),s("br"),s("span",{staticClass:"line-number"},[t._v("113")]),s("br"),s("span",{staticClass:"line-number"},[t._v("114")]),s("br"),s("span",{staticClass:"line-number"},[t._v("115")]),s("br"),s("span",{staticClass:"line-number"},[t._v("116")]),s("br"),s("span",{staticClass:"line-number"},[t._v("117")]),s("br"),s("span",{staticClass:"line-number"},[t._v("118")]),s("br"),s("span",{staticClass:"line-number"},[t._v("119")]),s("br"),s("span",{staticClass:"line-number"},[t._v("120")]),s("br"),s("span",{staticClass:"line-number"},[t._v("121")]),s("br")])]),s("h3",{attrs:{id:"_3-4-tsfilesequenceread"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-tsfilesequenceread"}},[t._v("#")]),t._v(" 3.4 TsFileSequenceRead")]),t._v(" "),s("p",[t._v("您可以使用示例中的类 "),s("code",[t._v("example/tsfile/org/apache/iotdb/tsfile/TsFileSequenceRead")]),t._v(" 顺序打印 TsFile 中的内容。")]),t._v(" "),s("h3",{attrs:{id:"_3-5-vis-tool"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-vis-tool"}},[t._v("#")]),t._v(" 3.5 Vis Tool")]),t._v(" "),s("p",[t._v("Vis 是一个把 TsFiles 中的 chunk 数据的时间分布以及点数可视化的工具。你可以使用这个工具来帮助你 debug，还可以用来观察数据分布等等。\n欢迎使用这个工具，在社区里交流你的想法。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-images.githubusercontent.com/33376433/123763559-82074100-d8f6-11eb-9109-ead7e18f84b8.png",alt:"image"}})]),t._v(" "),s("ul",[s("li",[t._v("图中的一个窄长矩形代表的是一个 TsFile 里的一个 chunk，其可视化信息为、[tsName, fileName, chunkId, startTime, endTime, pointCountNum]。")]),t._v(" "),s("li",[t._v("矩形在 x 轴上的位置是由该 chunk 的 startTime 和 endTime 决定的。")]),t._v(" "),s("li",[t._v("矩形在 y 轴上的位置是由以下三项共同决定的：\n"),s("ul",[s("li",[t._v("(a)"),s("code",[t._v("showSpecific")]),t._v(": 用户指定要显示的特定时间序列集合。")]),t._v(" "),s("li",[t._v("(b) seqKey/unseqKey 显示规则：从满足特定时间序列集合的 keys 提取 seqKey 或 unseqKey 时采取不同的显示规则：\n"),s("ul",[s("li",[t._v("b-1) unseqKey 识别 tsName 和 fileName，因此有相同 tsName 和 fileName 但是不同 chunkIds 的 chunk 数据将绘制在同一行；")]),t._v(" "),s("li",[t._v("b-2) seqKey 识别 tsName，因此有相同 tsName 但是不同 fileNames 和 chunkIds 的 chunk 数据将绘制在同一行，")])])]),t._v(" "),s("li",[t._v("(c)"),s("code",[t._v("isFileOrder")]),t._v("：根据"),s("code",[t._v("isFileOrder")]),t._v("对 seqKey&unseqKey 进行排序，true 则以 fileName 优先的顺序排序，\nfalse 则以 tsName 优先的顺序排序。当在一张图上同时显示多条时间序列时，该参数将给用户提供这两种可选的观察视角。")])])])]),t._v(" "),s("h4",{attrs:{id:"_3-5-1-如何运行-vis"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-1-如何运行-vis"}},[t._v("#")]),t._v(" 3.5.1 如何运行 Vis")]),t._v(" "),s("p",[t._v("源数据包含两个文件："),s("code",[t._v("TsFileExtractVisdata.java")]),t._v("和"),s("code",[t._v("vis.m")]),t._v("。\n"),s("code",[t._v("TsFileExtractVisdata.java")]),t._v("从输入的 tsfile 文件中提取必要的可视化信息，"),s("code",[t._v("vis.m")]),t._v("用这些信息来完成作图。")]),t._v(" "),s("p",[t._v("简单说就是：先运行"),s("code",[t._v("TsFileExtractVisdata.java")]),t._v("然后再运行"),s("code",[t._v("vis.m")]),t._v("。")]),t._v(" "),s("h5",{attrs:{id:"第一步-运行-tsfileextractvisdata-java"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第一步-运行-tsfileextractvisdata-java"}},[t._v("#")]),t._v(" 第一步：运行 TsFileExtractVisdata.java")]),t._v(" "),s("p",[s("code",[t._v("TsFileExtractVisdata.java")]),t._v("对输入的 tsfiles 的每一个 chunk 提取可视化信息 [tsName, fileName, chunkId, startTime, endTime, pointCountNum]，\n并把这些信息保存到指定的输出文件里。")]),t._v(" "),s("p",[t._v("该工具的启动脚本会在编译 server 之后生成至 "),s("code",[t._v("server\\target\\iotdb-server-{version}\\tools\\tsfileToolSet")]),t._v(" 目录中。")]),t._v(" "),s("p",[t._v("使用方式：")]),t._v(" "),s("p",[t._v("Windows:")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(".\\print-tsfile-visdata.bat path1 seqIndicator1 path2 seqIndicator2 ... pathN seqIndicatorN outputPath\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("Linux or MacOs:")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("./print-tsfile-visdata.sh path1 seqIndicator1 path2 seqIndicator2 ... pathN seqIndicatorN outputPath\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("参数：["),s("code",[t._v("path1")]),t._v(" "),s("code",[t._v("seqIndicator1")]),t._v(" "),s("code",[t._v("path2")]),t._v(" "),s("code",[t._v("seqIndicator2")]),t._v(" ... "),s("code",[t._v("pathN")]),t._v(" "),s("code",[t._v("seqIndicatorN")]),t._v(" "),s("code",[t._v("outputPath")]),t._v("]")]),t._v(" "),s("p",[t._v("细节：")]),t._v(" "),s("ul",[s("li",[t._v("一共 2N+1 个参数。")]),t._v(" "),s("li",[s("code",[t._v("seqIndicator")]),t._v("：'true'或者'false' （大小写不敏感）. 'true'表示是顺序文件，'false'表示是乱序文件。")]),t._v(" "),s("li",[s("code",[t._v("Path")]),t._v("：可以是一个 tsfile 的全路径，也可以是一个文件夹路径。如果是文件夹路径，你需要确保这个文件夹下的所有 tsfile 文件的"),s("code",[t._v("seqIndicator")]),t._v("都是一样的。")]),t._v(" "),s("li",[t._v("输入的所有 TsFile 文件必须是封好口的。处理未封口的文件留待未来有需要的情况再实现。")])]),t._v(" "),s("h5",{attrs:{id:"第二步-运行-vis-m"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第二步-运行-vis-m"}},[t._v("#")]),t._v(" 第二步：运行 vis.m")]),t._v(" "),s("p",[s("code",[t._v("vis.m")]),t._v("把"),s("code",[t._v("TsFileExtractVisdata")]),t._v("生成的 visdata 加载进来，然后基于 visdata 以及两个用户绘图参数"),s("code",[t._v("showSpecific")]),t._v("和"),s("code",[t._v("isFileOrder")]),t._v("来完成作图。")]),t._v(" "),s("div",{staticClass:"language-matlab line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-matlab"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("timeMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("countMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("loadVisData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("filePath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("timestampUnit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% Load visdata generated by TsFileExtractVisdata.")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% filePath: the path of visdata.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% The format is [tsName,fileName,chunkId,startTime,endTime,pointCountNum].")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% `tsName` and `fileName` are string, the others are long value.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('% If the tsfile is unsequence file, `fileName` will contain "unseq" as an')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% indicator, which is guaranteed by TsFileExtractVisdata.")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% timestampUnit(not case sensitive):")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%   'us' if the timestamp is microsecond, e.g., 1621993620816000")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%   'ms' if it is millisecond, e.g., 1621993620816")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%   's' if it is second, e.g., 1621993620")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% timeMap: record the time range of every chunk.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% Key [tsName][fileName][chunkId] identifies the only chunk. Value is")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% [startTime,endTime] of the chunk.")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% countMap: record the point count number of every chunk. Key is the same")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% as that of timeMap. Value is pointCountNum.")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br")])]),s("div",{staticClass:"language-matlab line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-matlab"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("draw")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("countMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("showSpecific"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("isFileOrder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% Plot figures given the loaded data and two plot parameters:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% `showSpecific` and `isFileOrder`.")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% process: 1) traverse `keys(timeMap)` to get the position arrangements on")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%          the y axis dynamically, which is defined simultaneously by")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%           (a)`showSpecific`: traverse `keys(timeMap)`, filter out keys")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%          that don't statisfy `showSpecific`.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%           (b) seqKey/unseqKey display policies: extract seqKey or unseqKey")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%          from statisfied keys under different display policies:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%               b-1) unseqKey identifies tsName and fileName, so chunk data with the")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%               same fileName and tsName but different chunkIds are")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%               plotted on the same line.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%               b-2) seqKey identifies tsName, so chunk data with the same tsName but")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%               different fileNames and chunkIds are plotted on the same")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%               line.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%           (c)`isFileOrder`: sort seqKey&unseqKey according to `isFileOrder`,")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%          finally get the position arrangements on the y axis.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%          2) traverse `keys(timeMap)` again, get startTime&endTime from")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%          `treeMap` as positions on the x axis, combined with the")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%          positions on the y axis from the last step, finish plot.")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% timeMap,countMap: generated by loadVisData function.")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% showSpecific: the specific set of time series to be plotted.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%               If showSpecific is empty{}, then all loaded time series")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%               will be plotted.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%               Note: Wildcard matching is not supported now. In other")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%               words, showSpecific only support full time series path")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%               names.")]),t._v("\n%\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% isFileOrder: true to sort seqKeys&unseqKeys by fileName priority, false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("%              to sort seqKeys&unseqKeys by tsName priority.")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br")])]),s("h4",{attrs:{id:"_3-5-2-例子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-2-例子"}},[t._v("#")]),t._v(" 3.5.2 例子")]),t._v(" "),s("h5",{attrs:{id:"例-1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#例-1"}},[t._v("#")]),t._v(" 例 1")]),t._v(" "),s("p",[t._v("使用由"),s("code",[t._v("IoTDBLargeDataIT.insertData")]),t._v("写出的 tsfiles。\n小修改："),s("code",[t._v("IoTDBLargeDataIT.insertData")]),t._v("最后添加一条"),s("code",[t._v('statement.execute("flush");')]),t._v("指令。")]),t._v(" "),s("p",[t._v("第一步：运行"),s("code",[t._v("TsFileExtractVisdata.java")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(".\\print-tsfile-visdata.bat data\\sequence true data\\unsequence false D:\\visdata1.csv\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("或者等价地：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(".\\print-tsfile-visdata.bat data\\sequence\\root.vehicle\\0\\0\\1622743492580-1-0.tsfile true data\\sequence\\root.vehicle\\0\\0\\1622743505092-2-0.tsfile true data\\sequence\\root.vehicle\\0\\0\\1622743505573-3-0.tsfile true data\\unsequence\\root.vehicle\\0\\0\\1622743505901-4-0.tsfile false D:\\visdata1.csv\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("第二步：运行"),s("code",[t._v("vis.m")])]),t._v(" "),s("div",{staticClass:"language-matlab line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-matlab"}},[s("code",[t._v("clear all"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("close all"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% 1. load visdata generated by TsFileExtractVisdata")]),t._v("\nfilePath "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'D:\\visdata1.csv'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("timeMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("countMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("loadVisData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("filePath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ms'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% mind the timestamp unit")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% 2. plot figures given the loaded data and two plot parameters:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("% `showSpecific` and `isFileOrder`")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("draw")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("countMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("false"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("title")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v('"'),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("draw")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("countMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("false"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v('"'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("draw")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("countMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("true"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("title")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v('"'),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("draw")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("countMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("\\")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("true"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v('"'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("draw")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("countMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'root.vehicle.d0.s0'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("false"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("title")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v('"'),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("draw")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("countMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'root.vehicle.d0.s0'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("false"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v('"'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("draw")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("countMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'root.vehicle.d0.s0'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'root.vehicle.d0.s1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("false"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("title")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v('"'),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("draw")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("countMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'root.vehicle.d0.s0'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'root.vehicle.d0.s1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("false"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v('"'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("draw")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("countMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'root.vehicle.d0.s0'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'root.vehicle.d0.s1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("true"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("title")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v('"'),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("draw")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("countMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'root.vehicle.d0.s0'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'root.vehicle.d0.s1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("true"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v('"'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br")])]),s("p",[t._v("绘图结果：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-images.githubusercontent.com/33376433/123760377-5df63080-d8f3-11eb-8ca8-c93590f21bde.png",alt:"1"}}),t._v(" "),s("img",{attrs:{src:"https://user-images.githubusercontent.com/33376433/123760402-63537b00-d8f3-11eb-9393-398c4204ccf1.png",alt:"2"}}),t._v(" "),s("img",{attrs:{src:"https://user-images.githubusercontent.com/33376433/123760418-66e70200-d8f3-11eb-8701-437afd73ac4c.png",alt:"3"}}),t._v(" "),s("img",{attrs:{src:"https://user-images.githubusercontent.com/33376433/123760424-69e1f280-d8f3-11eb-9f45-571496685a6e.png",alt:"4"}}),t._v(" "),s("img",{attrs:{src:"https://user-images.githubusercontent.com/33376433/123760433-6cdce300-d8f3-11eb-8ecd-da04a475af41.png",alt:"5"}})]),t._v(" "),s("h2",{attrs:{id:"附录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#附录"}},[t._v("#")]),t._v(" 附录")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("大端存储")]),t._v(" "),s("ul",[s("li",[t._v("比如： "),s("code",[t._v("int")]),t._v(" "),s("code",[t._v("0x8")]),t._v(" 将会被存储为 "),s("code",[t._v("00 00 00 08")]),t._v(", 而不是 "),s("code",[t._v("08 00 00 00")])])])]),t._v(" "),s("li",[s("strong",[t._v("可变长的字符串类型")]),t._v(" "),s("ul",[s("li",[t._v("存储的方式是以一个 "),s("code",[t._v("int")]),t._v(" 类型的 "),s("code",[t._v("Size")]),t._v(" + 字符串组成。"),s("code",[t._v("Size")]),t._v(" 的值可以为 0。")]),t._v(" "),s("li",[s("code",[t._v("Size")]),t._v(" 指的是字符串所占的字节数，它并不一定等于字符串的长度。")]),t._v(" "),s("li",[t._v('举例来说，"sensor_1" 这个字符串将被存储为 '),s("code",[t._v("00 00 00 08")]),t._v(' + "sensor_1" (ASCII编码)。')]),t._v(" "),s("li",[t._v('另外需要注意的一点是文件签名 "TsFile000001" ('),s("code",[t._v("Magic String")]),t._v(" + "),s("code",[t._v("Version")]),t._v("), 因为他的 "),s("code",[t._v("Size(12)")]),t._v(" 和 ASCII 编码值是固定的，所以没有必要在这个字符串前的写入 "),s("code",[t._v("Size")]),t._v(" 值。")])])]),t._v(" "),s("li",[s("strong",[t._v("压缩类型")]),t._v(" "),s("ul",[s("li",[t._v("0: UNCOMPRESSED")]),t._v(" "),s("li",[t._v("1: SNAPPY")]),t._v(" "),s("li",[t._v("2: GZIP")]),t._v(" "),s("li",[t._v("3: LZO")]),t._v(" "),s("li",[t._v("4: SDT")]),t._v(" "),s("li",[t._v("5: PAA")]),t._v(" "),s("li",[t._v("6: PLA")]),t._v(" "),s("li",[t._v("7: LZ4")])])])])])}),[],!1,null,null,null);e.default=n.exports}}]);