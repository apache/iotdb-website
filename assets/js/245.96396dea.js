(window.webpackJsonp=window.webpackJsonp||[]).push([[245],{812:function(v,_,e){"use strict";e.r(_);var o=e(69),t=Object(o.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"数据模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据模式"}},[v._v("#")]),v._v(" 数据模式")]),v._v(" "),e("h2",{attrs:{id:"数据模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据模型"}},[v._v("#")]),v._v(" 数据模型")]),v._v(" "),e("p",[v._v("我们以风电场物联网场景为例，说明如何在 IoTDB 中创建一个正确的数据模型。")]),v._v(" "),e("p",[v._v("根据企业组织结构和设备实体层次结构，我们将其物联网数据模型表示为如下图所示的属性层级组织结构，即电力集团层-风电场层-实体层-物理量层。其中 ROOT 为根节点，物理量层的每一个节点为叶子节点。IoTDB 采用树形结构定义数据模式，以从 ROOT 节点到叶子节点的路径来命名一个时间序列，层次间以“.”连接。例如，下图最左侧路径对应的时间序列名称为"),e("code",[v._v("ROOT.ln.wf01.wt01.status")]),v._v("。")]),v._v(" "),e("img",{staticStyle:{width:"100%","max-width":"800px","max-height":"600px","margin-left":"auto","margin-right":"auto",display:"block"},attrs:{src:"https://user-images.githubusercontent.com/19167280/123542457-5f511d00-d77c-11eb-8006-562d83069baa.png"}}),v._v(" "),e("p",[v._v("IoTDB 模型结构涉及的基本概念在下文将做详细叙述。")]),v._v(" "),e("h3",{attrs:{id:"物理量、实体、存储组、路径"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#物理量、实体、存储组、路径"}},[v._v("#")]),v._v(" 物理量、实体、存储组、路径")]),v._v(" "),e("ul",[e("li",[v._v("物理量（Measurement，也称工况、字段 field）")])]),v._v(" "),e("p",[e("strong",[v._v("一元或多元物理量")]),v._v("，是在实际场景中检测装置所记录的测量信息，且可以按一定规律变换成为电信号或其他所需形式的信息输出并发送给 IoTDB。在 IoTDB 当中，存储的所有数据及路径，都是以物理量为单位进行组织。")]),v._v(" "),e("ul",[e("li",[v._v("物理分量（SubMeasurement、分量）")])]),v._v(" "),e("p",[v._v("在多元物理量中，包括多个分量。如 GPS 是一个多元物理量，包含 3 个分量：经度、维度、海拔。多元物理量通常被同时采集，共享时间列。")]),v._v(" "),e("p",[v._v("一元物理量则将分量名和物理量名字重合。如温度是一个一元物理量。")]),v._v(" "),e("ul",[e("li",[v._v("实体（Entity，也称设备，device）")])]),v._v(" "),e("p",[e("strong",[v._v("一个物理实体")]),v._v("，是在实际场景中拥有物理量的设备或装置。在 IoTDB 当中，所有的物理量都有其对应的归属实体。")]),v._v(" "),e("ul",[e("li",[v._v("存储组（Storage group）")])]),v._v(" "),e("p",[e("strong",[v._v("一组物理实体")]),v._v("，用户可以将任意前缀路径设置成存储组。如有 4 条时间序列"),e("code",[v._v("root.ln.wf01.wt01.status")]),v._v(", "),e("code",[v._v("root.ln.wf01.wt01.temperature")]),v._v(", "),e("code",[v._v("root.ln.wf02.wt02.hardware")]),v._v(", "),e("code",[v._v("root.ln.wf02.wt02.status")]),v._v("，路径"),e("code",[v._v("root.ln")]),v._v("下的两个实体 "),e("code",[v._v("wt01")]),v._v(", "),e("code",[v._v("wt02")]),v._v("可能属于同一个业主，或者同一个制造商，这时候就可以将前缀路径"),e("code",[v._v("root.ln")]),v._v("指定为一个存储组。未来"),e("code",[v._v("root.ln")]),v._v("下增加了新的实体，也将属于该存储组。")]),v._v(" "),e("p",[v._v("一个存储组中的所有实体的数据会存储在同一个文件夹下，不同存储组的实体数据会存储在磁盘的不同文件夹下，从而实现物理隔离。")]),v._v(" "),e("blockquote",[e("p",[v._v("注意 1：不允许将一个完整路径（如上例的"),e("code",[v._v("root.ln.wf01.wt01.status")]),v._v(") 设置成存储组。")]),v._v(" "),e("p",[v._v("注意 2：一个时间序列其前缀必须属于某个存储组。在创建时间序列之前，用户必须设定该序列属于哪个存储组（Storage Group）。只有设置了存储组的时间序列才可以被持久化在磁盘上。")])]),v._v(" "),e("p",[v._v("一个前缀路径一旦被设定成存储组后就不可以再更改这个存储组的设定。")]),v._v(" "),e("p",[v._v("一个存储组设定后，其对应的前缀路径的祖先层级与孩子及后裔层级也不允许再设置存储组（如，"),e("code",[v._v("root.ln")]),v._v("设置存储组后，root 层级与"),e("code",[v._v("root.ln.wf01")]),v._v("不允许被设置为存储组）。")]),v._v(" "),e("p",[v._v("存储组节点名只支持中英文字符、数字、下划线和中划线的组合。例如"),e("code",[v._v("root. 存储组_1-组1")]),v._v(" 。")]),v._v(" "),e("ul",[e("li",[v._v("路径")])]),v._v(" "),e("p",[v._v("在 IoTDB 中，路径是指符合以下约束的表达式：")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("path: LayerName (DOT LayerName)+\nLayerName: Identifier | STAR\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br"),e("span",{staticClass:"line-number"},[v._v("2")]),e("br")])]),e("p",[v._v("其中 STAR 为“*”，DOT 为“.”。")]),v._v(" "),e("p",[v._v("我们称一个路径中在两个“.”中间的部分叫做一个层级，则"),e("code",[v._v("root.a.b.c")]),v._v("为一个层级为 4 的路径。")]),v._v(" "),e("p",[v._v("值得说明的是，在路径中，root 为一个保留字符，它只允许出现在下文提到的时间序列的开头，若其他层级出现 root，则无法解析，提示报错。")]),v._v(" "),e("p",[v._v("在路径中，不允许使用单引号。如果你想在 LayerName 中使用"),e("code",[v._v(".")]),v._v("等特殊字符，请使用双引号。例如，"),e("code",[v._v('root.sg."d.1"."s.1"')]),v._v("。双引号内支持使用转义符进行双引号的嵌套，如 "),e("code",[v._v('root.sg.d1."s.\\"t\\"1"')]),v._v("。")]),v._v(" "),e("p",[v._v("除了 storage group 存储组，其他的 LayerName 中不用加双引号就支持的字符如下：")]),v._v(" "),e("ul",[e("li",[v._v('中文字符"\\u2E80"到"\\u9FFF"')]),v._v(" "),e("li",[v._v('"+"，"&"，"%"，"$"，"#"，"@"，"/"，"_"，"-"，":"')]),v._v(" "),e("li",[v._v('"A"到"Z"，"a"到"z"，"0"到"9"')])]),v._v(" "),e("p",[v._v("其中'-' 和 ':' 不能放置在第一位，不能使用单个 '+'。")]),v._v(" "),e("blockquote",[e("p",[v._v("注意：storage group 中的 LayerName 只支持数字，字母，汉字，下划线和中划线。另外，如果在 Windows 系统上部署，存储组层级名称是大小写不敏感的。例如同时创建"),e("code",[v._v("root.ln")]),v._v(" 和 "),e("code",[v._v("root.LN")]),v._v(" 是不被允许的。")])]),v._v(" "),e("ul",[e("li",[v._v("前缀路径")])]),v._v(" "),e("p",[v._v("前缀路径是指一个时间序列的前缀所在的路径，一个前缀路径包含以该路径为前缀的所有时间序列。例如当前我们有"),e("code",[v._v("root.vehicle.device1.sensor1")]),v._v(", "),e("code",[v._v("root.vehicle.device1.sensor2")]),v._v(", "),e("code",[v._v("root.vehicle.device2.sensor1")]),v._v("三个传感器，则"),e("code",[v._v("root.vehicle.device1")]),v._v("前缀路径包含"),e("code",[v._v("root.vehicle.device1.sensor1")]),v._v("、"),e("code",[v._v("root.vehicle.device1.sensor2")]),v._v("两个时间序列，而不包含"),e("code",[v._v("root.vehicle.device2.sensor1")]),v._v("。")]),v._v(" "),e("ul",[e("li",[v._v("带"),e("code",[v._v("*")]),v._v("路径\n为了使得在表达多个时间序列或表达前缀路径的时候更加方便快捷，IoTDB 为用户提供带"),e("code",[v._v("*")]),v._v("路径。"),e("code",[v._v("*")]),v._v("可以出现在路径中的任何层。按照"),e("code",[v._v("*")]),v._v("出现的位置，带"),e("code",[v._v("*")]),v._v("路径可以分为两种：")])]),v._v(" "),e("p",[e("code",[v._v("*")]),v._v("出现在路径的结尾；")]),v._v(" "),e("p",[e("code",[v._v("*")]),v._v("出现在路径的中间；")]),v._v(" "),e("p",[v._v("当"),e("code",[v._v("*")]),v._v("出现在路径的结尾时，其代表的是（"),e("code",[v._v("*")]),v._v("）+，即为一层或多层"),e("code",[v._v("*")]),v._v("。例如"),e("code",[v._v("root.vehicle.device1.*")]),v._v("代表的是"),e("code",[v._v("root.vehicle.device1.*")]),v._v(", "),e("code",[v._v("root.vehicle.device1.*.*")]),v._v(", "),e("code",[v._v("root.vehicle.device1.*.*.*")]),v._v("等所有以"),e("code",[v._v("root.vehicle.device1")]),v._v("为前缀路径的大于等于 4 层的路径。")]),v._v(" "),e("p",[v._v("当"),e("code",[v._v("*")]),v._v("出现在路径的中间，其代表的是"),e("code",[v._v("*")]),v._v("本身，即为一层。例如"),e("code",[v._v("root.vehicle.*.sensor1")]),v._v("代表的是以"),e("code",[v._v("root.vehicle")]),v._v("为前缀，以"),e("code",[v._v("sensor1")]),v._v("为后缀，层次等于 4 层的路径。")]),v._v(" "),e("blockquote",[e("p",[v._v("注意："),e("code",[v._v("*")]),v._v("不能放在路径开头。")])]),v._v(" "),e("blockquote",[e("p",[v._v("注意："),e("code",[v._v("*")]),v._v("放在末尾时与前缀路径表意相同，例如"),e("code",[v._v("root.vehicle.*")]),v._v("与"),e("code",[v._v("root.vehicle")]),v._v("为相同含义。")])]),v._v(" "),e("blockquote",[e("p",[v._v("注意："),e("code",[v._v("*")]),v._v("create 创建时，后面的路径同时不能含有"),e("code",[v._v("*")]),v._v("。")])]),v._v(" "),e("h3",{attrs:{id:"一元、多元时间序列"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一元、多元时间序列"}},[v._v("#")]),v._v(" 一元、多元时间序列")]),v._v(" "),e("ul",[e("li",[v._v("数据点（Data point）")])]),v._v(" "),e("p",[e("strong",[v._v("一个“时间-值”对")]),v._v("。")]),v._v(" "),e("ul",[e("li",[v._v("时间序列（一个实体的某个物理量对应一个时间序列，Timeseries，也称测点 meter、时间线 timeline，实时数据库中常被称作标签 tag、参数 parameter）")])]),v._v(" "),e("p",[e("strong",[v._v("一个物理实体的某个物理量在时间轴上的记录")]),v._v("，是数据点的序列。")]),v._v(" "),e("p",[v._v("例如，ln 电力集团、wf01 风电场的实体 wt01 有名为 status 的物理量，则它的时间序列可以表示为："),e("code",[v._v("root.ln.wf01.wt01.status")]),v._v("。")]),v._v(" "),e("ul",[e("li",[v._v("一元时间序列（single-variable timeseries 或 timeseries，v0.1 起支持）")])]),v._v(" "),e("p",[v._v("一个实体的一个一元物理量对应一个一元时间序列。实体+物理量=时间序列")]),v._v(" "),e("ul",[e("li",[v._v("多元时间序列（Multi-variable timeseries 或 Aligned timeseries，v0.13 起支持）")])]),v._v(" "),e("p",[v._v("一个实体的一个多元物理量对应一个多元时间序列。这些时间序列称为"),e("strong",[v._v("多元时间序列")]),v._v("，也叫"),e("strong",[v._v("对齐时间序列")]),v._v("。")]),v._v(" "),e("p",[v._v("多元时间序列需要被同时创建、同时插入值，删除时也必须同时删除。不过在查询的时候，可以对于每一个分量单独查询。")]),v._v(" "),e("p",[v._v("通过使用对齐的时间序列，在插入数据时，一组对齐序列的时间戳列在内存和磁盘中仅需存储一次，而不是每个时间序列存储一次：")]),v._v(" "),e("img",{staticStyle:{width:"100%","max-width":"800px","max-height":"600px","margin-left":"auto","margin-right":"auto",display:"block"},attrs:{src:"https://user-images.githubusercontent.com/19167280/123542458-62e4a400-d77c-11eb-8c45-ca516f1b7eba.png"}}),v._v(" "),e("p",[v._v("在后续数据定义语言、数据操作语言和 Java 原生接口章节，将对涉及到对齐时间序列的各种操作进行逐一介绍。")]),v._v(" "),e("ul",[e("li",[v._v("时间戳类型")])]),v._v(" "),e("p",[v._v("时间戳是一个数据到来的时间点，其中包括绝对时间戳和相对时间戳，详细描述参见数据类型文档。")]),v._v(" "),e("h3",{attrs:{id:"物理量模板"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#物理量模板"}},[v._v("#")]),v._v(" 物理量模板")]),v._v(" "),e("ul",[e("li",[v._v("物理量模板（Measurement template，v0.13 起支持）")])]),v._v(" "),e("p",[v._v("实际应用中有许多实体所采集的物理量相同，即具有相同的工况名称和类型，可以声明一个"),e("strong",[v._v("物理量模板")]),v._v("来定义可采集的物理量集合。将物理量模版挂在树形数据模式的任意节点上，表示该节点下的所有实体具有相同的物理量集合。")]),v._v(" "),e("p",[v._v("目前每一条路径节点仅允许挂载一个物理量模板，即当一个节点被挂载物理量模板后，它的祖先节点和后代节点都不能再挂载物理量模板。实体将使用其自身或祖先的物理量模板作为有效模板。")])])}),[],!1,null,null,null);_.default=t.exports}}]);