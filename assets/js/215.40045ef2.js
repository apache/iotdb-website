(window.webpackJsonp=window.webpackJsonp||[]).push([[215],{787:function(_,v,a){"use strict";a.r(v);var t=a(69),e=Object(t.a)({},(function(){var _=this,v=_.$createElement,a=_._self._c||v;return a("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[a("ul",[a("li",[a("a",{attrs:{href:"#%E5%90%8C%E6%AD%A5%E5%B7%A5%E5%85%B7"}},[_._v("同步工具")]),_._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E6%A6%82%E8%BF%B0"}},[_._v("概述")]),_._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E5%9C%BA%E6%99%AF"}},[_._v("场景")])]),_._v(" "),a("li",[a("a",{attrs:{href:"#%E7%9B%AE%E6%A0%87"}},[_._v("目标")])])])]),_._v(" "),a("li",[a("a",{attrs:{href:"#%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84"}},[_._v("目录结构")]),_._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1"}},[_._v("目录结构设计")])]),_._v(" "),a("li",[a("a",{attrs:{href:"#%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84%E8%AF%B4%E6%98%8E"}},[_._v("目录结构说明")]),_._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E5%8F%91%E9%80%81%E7%AB%AF"}},[_._v("发送端")])]),_._v(" "),a("li",[a("a",{attrs:{href:"#%E6%8E%A5%E6%94%B6%E7%AB%AF"}},[_._v("接收端")])]),_._v(" "),a("li",[a("a",{attrs:{href:"#%E5%85%B6%E4%BB%96"}},[_._v("其他")])])])])])]),_._v(" "),a("li",[a("a",{attrs:{href:"#%E5%90%8C%E6%AD%A5%E5%B7%A5%E5%85%B7%E5%8F%91%E9%80%81%E7%AB%AF"}},[_._v("同步工具发送端")]),_._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E9%9C%80%E6%B1%82%E8%AF%B4%E6%98%8E"}},[_._v("需求说明")])]),_._v(" "),a("li",[a("a",{attrs:{href:"#%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1"}},[_._v("模块设计")]),_._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E6%A8%A1%E5%9D%97"}},[_._v("文件管理模块")]),_._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E5%8C%85"}},[_._v("包")])]),_._v(" "),a("li",[a("a",{attrs:{href:"#%E6%96%87%E4%BB%B6%E9%80%89%E6%8B%A9"}},[_._v("文件选择")])]),_._v(" "),a("li",[a("a",{attrs:{href:"#%E6%96%87%E4%BB%B6%E6%B8%85%E7%90%86"}},[_._v("文件清理")])])])]),_._v(" "),a("li",[a("a",{attrs:{href:"#%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E6%A8%A1%E5%9D%97"}},[_._v("文件传输模块")]),_._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E5%8C%85-1"}},[_._v("包")])]),_._v(" "),a("li",[a("a",{attrs:{href:"#%E5%90%8C%E6%AD%A5-schema"}},[_._v("同步 schema")])]),_._v(" "),a("li",[a("a",{attrs:{href:"#%E5%90%8C%E6%AD%A5%E6%95%B0%E6%8D%AE%E6%96%87%E4%BB%B6"}},[_._v("同步数据文件")])])])]),_._v(" "),a("li",[a("a",{attrs:{href:"#%E6%81%A2%E5%A4%8D%E6%A8%A1%E5%9D%97"}},[_._v("恢复模块")]),_._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E5%8C%85-2"}},[_._v("包")])]),_._v(" "),a("li",[a("a",{attrs:{href:"#%E6%B5%81%E7%A8%8B"}},[_._v("流程")])])])])])])])]),_._v(" "),a("li",[a("a",{attrs:{href:"#%E5%90%8C%E6%AD%A5%E5%B7%A5%E5%85%B7%E6%8E%A5%E6%94%B6%E7%AB%AF"}},[_._v("同步工具接收端")]),_._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E9%9C%80%E6%B1%82%E8%AF%B4%E6%98%8E-1"}},[_._v("需求说明")])]),_._v(" "),a("li",[a("a",{attrs:{href:"#%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1-1"}},[_._v("模块设计")]),_._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E6%A8%A1%E5%9D%97-1"}},[_._v("文件传输模块")]),_._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E5%8C%85-3"}},[_._v("包")])]),_._v(" "),a("li",[a("a",{attrs:{href:"#%E6%B5%81%E7%A8%8B-1"}},[_._v("流程")])])])]),_._v(" "),a("li",[a("a",{attrs:{href:"#%E6%96%87%E4%BB%B6%E5%8A%A0%E8%BD%BD%E6%A8%A1%E5%9D%97"}},[_._v("文件加载模块")]),_._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E5%8C%85-4"}},[_._v("包")])]),_._v(" "),a("li",[a("a",{attrs:{href:"#%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4"}},[_._v("文件删除")])]),_._v(" "),a("li",[a("a",{attrs:{href:"#%E5%8A%A0%E8%BD%BD%E6%96%B0%E6%96%87%E4%BB%B6"}},[_._v("加载新文件")])])])]),_._v(" "),a("li",[a("a",{attrs:{href:"#%E6%81%A2%E5%A4%8D%E6%A8%A1%E5%9D%97-1"}},[_._v("恢复模块")]),_._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E5%8C%85-5"}},[_._v("包")])]),_._v(" "),a("li",[a("a",{attrs:{href:"#%E6%B5%81%E7%A8%8B-2"}},[_._v("流程")])])])])])])])])])])]),_._v(" "),a("h1",{attrs:{id:"同步工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同步工具"}},[_._v("#")]),_._v(" 同步工具")]),_._v(" "),a("p",[_._v("同步工具是定期将本地磁盘中和新增的已持久化的 tsfile 文件上传至云端并加载到 Apache IoTDB 的套件工具。")]),_._v(" "),a("h2",{attrs:{id:"概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[_._v("#")]),_._v(" 概述")]),_._v(" "),a("p",[_._v("本文档主要介绍了同步工具的需求定义、模块设计等方面。")]),_._v(" "),a("h3",{attrs:{id:"场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#场景"}},[_._v("#")]),_._v(" 场景")]),_._v(" "),a("p",[_._v("同步工具的需求主要有以下几个方面：")]),_._v(" "),a("ul",[a("li",[a("p",[_._v("在生产环境中，Apache IoTDB 会收集数据源（工业设备、移动端等）产生的数据存储到本地。由于数据源可能分布在不同的地方，可能会有多个 Apache IoTDB 同时负责收集数据。针对每一个 IoTDB，它需要将自己本地的数据同步到数据中心中。数据中心负责收集并管理来自多个 Apache IoTDB 的数据。")])]),_._v(" "),a("li",[a("p",[_._v("随着 Apache IoTDB 系统的广泛应用，用户根据目标业务需求需要将一些 Apache IoTDB 实例生成的 tsfile 文件放在另一个 Apache IoTDB 实例的数据目录下加载并应用，实现数据同步。")])]),_._v(" "),a("li",[a("p",[_._v("同步模块在发送端以独立进程的形式存在，在接收端和 Apache IoTDB 位于同一进程内。")])]),_._v(" "),a("li",[a("p",[_._v("支持一个发送端向多个接收端同步数据且一个接收端可同时接收多个发送端的数据，但需要保证多个发送端同步的数据不冲突（即一个设备的数据来源只能有一个），否则需要提示冲突。")])])]),_._v(" "),a("h3",{attrs:{id:"目标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目标"}},[_._v("#")]),_._v(" 目标")]),_._v(" "),a("p",[_._v("利用同步工具可以将数据文件在两个 Apache IoTDB 实例间传输并加载。在网络不稳定或宕机等情况发生时，保证文件能够被完整、正确地传送到数据中心。")]),_._v(" "),a("h2",{attrs:{id:"目录结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目录结构"}},[_._v("#")]),_._v(" 目录结构")]),_._v(" "),a("p",[_._v("为方便说明，设应用场景为节点"),a("code",[_._v("192.168.130.15")]),_._v("向节点"),a("code",[_._v("192.168.130.16:5555")]),_._v("同步数据，同时节点"),a("code",[_._v("192.168.130.15")]),_._v("接收来自"),a("code",[_._v("192.168.130.14")]),_._v("节点同步的数据。由于节点"),a("code",[_._v("192.168.130.15")]),_._v("同时作为发送端和接收端，因此下面以节点"),a("code",[_._v("192.168.130.15")]),_._v("来说明目录结构。")]),_._v(" "),a("h3",{attrs:{id:"目录结构设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目录结构设计"}},[_._v("#")]),_._v(" 目录结构设计")]),_._v(" "),a("img",{staticStyle:{width:"100%","max-width":"800px","max-height":"600px","margin-left":"auto","margin-right":"auto",display:"block"},attrs:{src:"https://user-images.githubusercontent.com/26211279/74145347-849dc380-4c39-11ea-9ef2-e10a3fe2074d.png"}}),_._v(" "),a("h3",{attrs:{id:"目录结构说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目录结构说明"}},[_._v("#")]),_._v(" 目录结构说明")]),_._v(" "),a("p",[_._v("sync-sender 文件夹中包含该节点作为发送端时同步数据期间的临时文件、状态日志等。")]),_._v(" "),a("p",[_._v("sync-receiver 文件夹中包含该节点作为接收端时接收数据并加载期间的临时文件、状态日志等。")]),_._v(" "),a("p",[_._v("schema/sync 文件夹下保存的是需要持久化的同步信息。")]),_._v(" "),a("h4",{attrs:{id:"发送端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#发送端"}},[_._v("#")]),_._v(" 发送端")]),_._v(" "),a("p",[a("code",[_._v("data/sync-sender")]),_._v("为发送端文件夹，该目录下的文件夹名表示接收端的 IP 和端口，在该实例中有一个接收端"),a("code",[_._v("192.168.130.16:5555")]),_._v(", 每个文件夹下包含以下几个文件：")]),_._v(" "),a("ul",[a("li",[a("p",[_._v("last_local_files.txt\n记录同步任务结束后所有已被同步的本地 tsfile 文件列表，每次同步任务结束后更新。")])]),_._v(" "),a("li",[a("p",[_._v("snapshot\n在同步数据期间，该文件夹下含有所有的待同步的 tsfile 文件的硬链接。")])]),_._v(" "),a("li",[a("p",[_._v("sync.log\n记录同步模块的任务进度日志，用以系统宕机恢复时使用，后文会对该文件的结构进行详细阐述。")])])]),_._v(" "),a("h4",{attrs:{id:"接收端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#接收端"}},[_._v("#")]),_._v(" 接收端")]),_._v(" "),a("p",[a("code",[_._v("sync-receiver")]),_._v("为接收端文件夹，该目录下的文件夹名表示发送端的 IP 和 UUID，表示从该发送端接收到的数据文件和文件加载日志情况等，在该实例中有一个发送端"),a("code",[_._v("192.168.130.14")]),_._v("，它的 UUID 为"),a("code",[_._v("a45b6e63eb434aad891264b5c08d448e")]),_._v("。 每个文件夹下包含以下几个文件：")]),_._v(" "),a("ul",[a("li",[a("p",[_._v("load.log\n该文件是记录 tsfile 文件加载的任务进度日志，用以系统宕机恢复时使用。")])]),_._v(" "),a("li",[a("p",[_._v("data\n该文件夹中含有已从发送端接收到的 tsfile 文件。")])])]),_._v(" "),a("h4",{attrs:{id:"其他"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[_._v("#")]),_._v(" 其他")]),_._v(" "),a("p",[a("code",[_._v("schema/sync")]),_._v("文件夹下包含以下信息：")]),_._v(" "),a("ul",[a("li",[a("p",[_._v("作为发送端时，发送端实例的文件锁"),a("code",[_._v("sync.lock")]),_._v("\n该文件锁的目的是保证同一个发送端对同一个接收端仅能启动一个发送端实例，即只有一个向该接收端同步数据的进程。图示中目录"),a("code",[_._v("192.168.130.16_5555/sync_lock")]),_._v("表示对接收端"),a("code",[_._v("192.168.130.16_5555")]),_._v("同步的\n实例锁。每次启动时首先会检查该文件是否上锁，如果上锁说明已经有向该接收端同步数据的发送端，则停止本实例。")])]),_._v(" "),a("li",[a("p",[_._v("作为发送端时，发送端的唯一标识 UUID"),a("code",[_._v("uuid.txt")]),_._v("\n每个发送端有一个唯一的标识，以供接收端区分不同的发送端")])]),_._v(" "),a("li",[a("p",[_._v("作为发送端时，每个接收端的 schema 同步进度"),a("code",[_._v("sync_schema_pos")])]),_._v(" "),a("p",[_._v("由于 schema 日志"),a("code",[_._v("mlog.txt")]),_._v("数据是追加的，其中记录了所有元信息的变化过程，因此每次同步完 schema 后记录下当前位置在下次同步时直接增量同步即可减少重复 schema 传输。")])]),_._v(" "),a("li",[a("p",[_._v("作为接收端，接收端中每个设备的所有信息"),a("code",[_._v("device_owner.log")]),_._v("\n同步工具的应用中，一个接收端可以同时接收多个发送端的数据，但是不能产生冲突，否则接收端将不能保证数据的正确性。因此需要记录下每个设备是由哪个发送端进行同步的，遵循先到先得原则。")])])]),_._v(" "),a("p",[_._v("单独将这些信息放在 schmea 文件夹下的原因是一个 Apache IoTDB 实例可以拥有多个数据文件目录，也就是 data 目录可以有多个，但是 schema 文件夹只有一个，而这些信息是一个发送端实例共享的信息，而 data 文件夹下的信息表示的是该文件目录下的同步情况，属于子任务信息（每个数据文件目录即为一个子任务）。")]),_._v(" "),a("h2",{attrs:{id:"同步工具发送端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同步工具发送端"}},[_._v("#")]),_._v(" 同步工具发送端")]),_._v(" "),a("h3",{attrs:{id:"需求说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#需求说明"}},[_._v("#")]),_._v(" 需求说明")]),_._v(" "),a("ul",[a("li",[a("p",[_._v("每隔一段时间将发送端收集到的最新数据回传到接收端上。同时，针对历史数据的更新和删除，将这部分信息同步到接收端上。")])]),_._v(" "),a("li",[a("p",[_._v("同步数据必须完整，如果在传输的过程中因为网络不稳定、机器故障等因素造成数据文件不完整或者损坏，需要在下一次传输的过程中修复。")])])]),_._v(" "),a("h3",{attrs:{id:"模块设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块设计"}},[_._v("#")]),_._v(" 模块设计")]),_._v(" "),a("h4",{attrs:{id:"文件管理模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件管理模块"}},[_._v("#")]),_._v(" 文件管理模块")]),_._v(" "),a("h5",{attrs:{id:"包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#包"}},[_._v("#")]),_._v(" 包")]),_._v(" "),a("p",[_._v("org.apache.iotdb.db.sync.sender.manage")]),_._v(" "),a("h5",{attrs:{id:"文件选择"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件选择"}},[_._v("#")]),_._v(" 文件选择")]),_._v(" "),a("p",[_._v("文件选择的功能是选出当前 Apache IoTDB 实例中已封口的 tsfile 文件（有对应的"),a("code",[_._v(".resource")]),_._v("文件，且不含"),a("code",[_._v(".modification")]),_._v("文件和"),a("code",[_._v(".merge")]),_._v("文件）列表和上次同步任务结束后记录的 tsfile 文件列表的差异，共有两部分：删除的 tsfile 文件列表和新增的 tsfile 文件列表。并对所有的新增的文件进行硬链接，防止同步期间由于系统运行导致的文件删除等操作。")]),_._v(" "),a("h5",{attrs:{id:"文件清理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件清理"}},[_._v("#")]),_._v(" 文件清理")]),_._v(" "),a("p",[_._v("当接收到文件传输模块的任务结束的通知时，执行以下命令：")]),_._v(" "),a("ul",[a("li",[a("p",[_._v("将"),a("code",[_._v("last_local_files.txt")]),_._v("文件中的文件名列表加载到内存形成 set，并逐行解析"),a("code",[_._v("log.sync")]),_._v("对 set 进行删除和添加")])]),_._v(" "),a("li",[a("p",[_._v("将内存中的文件名列表 set 写入"),a("code",[_._v("current_local_files.txt")]),_._v("文件中")])]),_._v(" "),a("li",[a("p",[_._v("删除"),a("code",[_._v("last_local_files.txt")]),_._v("文件")])]),_._v(" "),a("li",[a("p",[_._v("将"),a("code",[_._v("current_local_files.txt")]),_._v("重命名为"),a("code",[_._v("last_local_files.txt")])])]),_._v(" "),a("li",[a("p",[_._v("删除 sequence 文件夹和"),a("code",[_._v("sync.log")]),_._v("文件")])])]),_._v(" "),a("h4",{attrs:{id:"文件传输模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件传输模块"}},[_._v("#")]),_._v(" 文件传输模块")]),_._v(" "),a("h5",{attrs:{id:"包-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#包-2"}},[_._v("#")]),_._v(" 包")]),_._v(" "),a("p",[_._v("org.apache.iotdb.db.sync.sender.transfer")]),_._v(" "),a("h5",{attrs:{id:"同步-schema"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同步-schema"}},[_._v("#")]),_._v(" 同步 schema")]),_._v(" "),a("p",[_._v("在同步数据文件前，首先同步新增的 schmea 信息，并更新"),a("code",[_._v("sync_schema_pos")]),_._v("。")]),_._v(" "),a("h5",{attrs:{id:"同步数据文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同步数据文件"}},[_._v("#")]),_._v(" 同步数据文件")]),_._v(" "),a("p",[_._v("对于每个文件路径，调用文件管理模块，获得删除的文件列表和新增的文件列表，然后执行以下流程：")]),_._v(" "),a("ol",[a("li",[_._v("开始同步任务，在"),a("code",[_._v("sync.log")]),_._v("记录"),a("code",[_._v("sync start")])]),_._v(" "),a("li",[_._v("开始同步删除的文件列表，在"),a("code",[_._v("sync.log")]),_._v("记录"),a("code",[_._v("sync deleted file names start")])]),_._v(" "),a("li",[_._v("通知接收端开始同步删除的文件名列表，")]),_._v(" "),a("li",[_._v("对删除列表中的每一个文件名\n4.1. 向接收端传输文件名（示例"),a("code",[_._v("1581324718762-101-1.tsfile")]),_._v(")\n4.2. 传输成功，在"),a("code",[_._v("sync.log")]),_._v("中记录"),a("code",[_._v("1581324718762-101-1.tsfile")])]),_._v(" "),a("li",[_._v("开始同步新增的 tsfile 文件列表，在"),a("code",[_._v("sync.log")]),_._v("记录"),a("code",[_._v("sync deleted file names end 和 sync tsfile start")])]),_._v(" "),a("li",[_._v("通知接收端开始同步文件")]),_._v(" "),a("li",[_._v("对新增列表中的每一个 tsfile：\n7.1. 将文件按块传输给接收端（示例"),a("code",[_._v("1581324718762-101-1.tsfile")]),_._v(")\n7.2. 若文件传输失败，则多次尝试，若尝试超过一定次数（可由用户配置，默认为 5)，放弃该文件的传输；若传输成功，在"),a("code",[_._v("sync.log")]),_._v("中记录"),a("code",[_._v("1581324718762-101-1.tsfile")])]),_._v(" "),a("li",[_._v("通知接收端同步任务结束，在"),a("code",[_._v("sync.log")]),_._v("记录"),a("code",[_._v("sync tsfile end")]),_._v("和"),a("code",[_._v("sync end")])]),_._v(" "),a("li",[_._v("调用文件管理模块清理文件")]),_._v(" "),a("li",[_._v("结束同步任务")])]),_._v(" "),a("h4",{attrs:{id:"恢复模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#恢复模块"}},[_._v("#")]),_._v(" 恢复模块")]),_._v(" "),a("h5",{attrs:{id:"包-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#包-3"}},[_._v("#")]),_._v(" 包")]),_._v(" "),a("p",[_._v("org.apache.iotdb.db.sync.sender.recover")]),_._v(" "),a("h5",{attrs:{id:"流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#流程"}},[_._v("#")]),_._v(" 流程")]),_._v(" "),a("p",[_._v("同步工具发送端每次启动同步任务时，首先检查发送端文件夹下有没有对应的接收端文件夹，若没有，表示没有和该接收端进行过同步任务，跳过恢复模块；否则，根据该文件夹下的文件执行恢复算法：")]),_._v(" "),a("ol",[a("li",[_._v("若存在"),a("code",[_._v("current_local_files.txt")]),_._v("，跳转到步骤 2；若不存在，跳转到步骤 3")]),_._v(" "),a("li",[_._v("若存在"),a("code",[_._v("last_local_files.txt")]),_._v("，则删除"),a("code",[_._v("current_local_files.txt")]),_._v("文件并跳转到步骤\n3；若不存在，跳转到步骤 7")]),_._v(" "),a("li",[_._v("若存在"),a("code",[_._v("sync.log")]),_._v("，跳转到步骤 4；若不存在，跳转到步骤 8")]),_._v(" "),a("li",[_._v("将"),a("code",[_._v("last_local_files.txt")]),_._v("文件中的文件名列表加载到内存形成 set，并逐行解析\n"),a("code",[_._v("sync.log")]),_._v("对 set 进行删除和添加")]),_._v(" "),a("li",[_._v("将内存中的文件名列表 set 写入"),a("code",[_._v("current_local_files.txt")]),_._v("文件中")]),_._v(" "),a("li",[_._v("删除"),a("code",[_._v("last_local_files.txt")]),_._v("文件")]),_._v(" "),a("li",[_._v("将"),a("code",[_._v("current_local_files.txt")]),_._v("重命名为"),a("code",[_._v("last_local_files.txt")])]),_._v(" "),a("li",[_._v("删除 sequence 文件夹和"),a("code",[_._v("sync.log")]),_._v("文件")]),_._v(" "),a("li",[_._v("算法结束")])]),_._v(" "),a("h2",{attrs:{id:"同步工具接收端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同步工具接收端"}},[_._v("#")]),_._v(" 同步工具接收端")]),_._v(" "),a("h3",{attrs:{id:"需求说明-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#需求说明-2"}},[_._v("#")]),_._v(" 需求说明")]),_._v(" "),a("ul",[a("li",[a("p",[_._v("由于接收端需要同时接收来自多个发送端的文件，需要将不同发送端的文件区分开来，统一管理这些文件。")])]),_._v(" "),a("li",[a("p",[_._v("接收端从发送端接收文件并检验文件名、文件数据和该文件的 MD5 值。文件接收完成后，存储文件到接收端本地，并对接收到的 tsfile 文件进行 MD5 值校验和文件尾部检查，若检查通过若未正确接收，则对文件进行重传。")])]),_._v(" "),a("li",[a("p",[_._v("针对发送端传来的数据文件（可能包含了对旧数据的更新，新数据的插入等操作），需要将这部分数据合并到接收端本地的文件中。")])])]),_._v(" "),a("h3",{attrs:{id:"模块设计-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块设计-2"}},[_._v("#")]),_._v(" 模块设计")]),_._v(" "),a("h4",{attrs:{id:"文件传输模块-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件传输模块-2"}},[_._v("#")]),_._v(" 文件传输模块")]),_._v(" "),a("h5",{attrs:{id:"包-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#包-4"}},[_._v("#")]),_._v(" 包")]),_._v(" "),a("p",[_._v("org.apache.iotdb.db.sync.receiver.transfer")]),_._v(" "),a("h5",{attrs:{id:"流程-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#流程-2"}},[_._v("#")]),_._v(" 流程")]),_._v(" "),a("p",[_._v("文件传输模块负责接收从发送端传输的文件名和文件，其流程如下：")]),_._v(" "),a("ol",[a("li",[_._v("接收到发送端的同步开始指令，检查是否存在 sync.log 文件，若存在则表示上次同步的数据还未加载完毕，拒绝本次同步任务；否则在 sync.log 中记录 sync.start")]),_._v(" "),a("li",[_._v("接收到发送端的开始同步删除的文件名列表的指令，在 sync.log 中记录 sync deleted file names start")]),_._v(" "),a("li",[_._v("依次接收发送端传输的删除文件名\n3.1. 接收到发送端传输的文件名（示例"),a("code",[_._v("1581324718762-101-1.tsfile")]),_._v(")\n3.2. 接收成功，在"),a("code",[_._v("sync.log")]),_._v("中记录"),a("code",[_._v("1581324718762-101-1.tsfile")]),_._v("，并提交给数据加载模块处理")]),_._v(" "),a("li",[_._v("接收到发送单的开始同步传输的文件的指令，在"),a("code",[_._v("sync.log")]),_._v("中记录"),a("code",[_._v("sync deleted file names end")]),_._v("和"),a("code",[_._v("sync tsfile start")])]),_._v(" "),a("li",[_._v("依次接收发送端传输的 tsfile 文件\n5.1. 按块接收发送端传输的文件（示例"),a("code",[_._v("1581324718762-101-2.tsfile")]),_._v(")\n5.2. 对文件进行校验，若检验失败，删除该文件并通知发送端失败；否则，在"),a("code",[_._v("sync.log")]),_._v("中记录"),a("code",[_._v("1581324718762-101-2.tsfile")]),_._v("，并提交给数据加载模块处理")]),_._v(" "),a("li",[_._v("接收到发送端的同步任务结束命令，在"),a("code",[_._v("sync.log")]),_._v("中记录"),a("code",[_._v("sync tsfile end")]),_._v("和"),a("code",[_._v("sync end")])]),_._v(" "),a("li",[_._v("创建 sync.end 空文件")])]),_._v(" "),a("h4",{attrs:{id:"文件加载模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件加载模块"}},[_._v("#")]),_._v(" 文件加载模块")]),_._v(" "),a("h5",{attrs:{id:"包-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#包-5"}},[_._v("#")]),_._v(" 包")]),_._v(" "),a("p",[_._v("org.apache.iotdb.db.sync.receiver.load")]),_._v(" "),a("h5",{attrs:{id:"文件删除"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件删除"}},[_._v("#")]),_._v(" 文件删除")]),_._v(" "),a("p",[_._v("对于需要删除的文件（示例"),a("code",[_._v("1581324718762-101-1.tsfile")]),_._v(")，在内存中的"),a("code",[_._v("sequence tsfile list")]),_._v("中搜索是否有该文件，如有则将该文件从内存中维护的列表中删除并将磁盘中的文件删除。执行成功后在"),a("code",[_._v("load.log")]),_._v("中记录"),a("code",[_._v("delete 1581324718762-101-1.tsfile")]),_._v("。")]),_._v(" "),a("h5",{attrs:{id:"加载新文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#加载新文件"}},[_._v("#")]),_._v(" 加载新文件")]),_._v(" "),a("p",[_._v("对于需要加载的文件（示例"),a("code",[_._v("1581324718762-101-1.tsfile")]),_._v(")，首先用"),a("code",[_._v("device_owner.log")]),_._v("检查该文件是否符合应用场景，即是否和其他发送端传输了相同设备的数据导致了冲突），如果发生了冲突，则拒绝此次加载并向发送端发送错误信息；否则，更新"),a("code",[_._v("device_owner.log")]),_._v("信息。")]),_._v(" "),a("p",[_._v("符合应用场景要求后，将该文件插入"),a("code",[_._v("sequence tsfile list")]),_._v("中合适的位置并将文件移动到"),a("code",[_._v("data/sequence")]),_._v("目录下。执行成功后在"),a("code",[_._v("load.log")]),_._v("中记录"),a("code",[_._v("load 1581324718762-101-1.tsfile")]),_._v("。每次文件加载完毕后，检查同步的目录下是否含有 sync.end 文件，如含有该文件且 sequence 文件夹下为空，则先删除 sync.log 文件，再删除 load.log 和 sync.end 文件。")]),_._v(" "),a("h4",{attrs:{id:"恢复模块-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#恢复模块-2"}},[_._v("#")]),_._v(" 恢复模块")]),_._v(" "),a("h5",{attrs:{id:"包-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#包-6"}},[_._v("#")]),_._v(" 包")]),_._v(" "),a("p",[_._v("org.apache.iotdb.db.sync.receiver.recover")]),_._v(" "),a("h5",{attrs:{id:"流程-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#流程-3"}},[_._v("#")]),_._v(" 流程")]),_._v(" "),a("p",[_._v("ApacheIoTDB 系统启动时，依次检查 sync 文件夹下的各个子文件夹，每个子文件表示由文件夹名所代表的发送端的同步任务。根据每个子文件夹下的文件执行恢复算法：")]),_._v(" "),a("ol",[a("li",[_._v("若不存在"),a("code",[_._v("sync.log")]),_._v("文件，跳转到步骤 4；若存在，跳转到步骤 2")]),_._v(" "),a("li",[_._v("逐行扫描 sync.log 的日志，执行对应的删除文件的操作和加载文件的操作，若该操作已在"),a("code",[_._v("load.log")]),_._v("文件中记录，则表明已经执行完毕，跳过该操作。跳转到步骤 3")]),_._v(" "),a("li",[_._v("删除"),a("code",[_._v("sync.log")]),_._v("文件")]),_._v(" "),a("li",[_._v("删除"),a("code",[_._v("load.log")]),_._v("文件")]),_._v(" "),a("li",[_._v("删除"),a("code",[_._v("sync.end")]),_._v("文件")]),_._v(" "),a("li",[_._v("算法结束")])]),_._v(" "),a("p",[_._v("每一次同步任务开始时，接收端对相应的子文件夹进行检查并恢复。")])])}),[],!1,null,null,null);v.default=e.exports}}]);