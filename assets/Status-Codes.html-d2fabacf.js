const e=JSON.parse('{"key":"v-417b1870","path":"/zh/UserGuide/V1.0.x/Reference/Status-Codes.html","title":"状态码","lang":"zh-CN","frontmatter":{"description":"IoTDB 引入了状态码这一概念。例如，因为 IoTDB 需要在写入数据之前首先注册时间序列，一种可能的解决方案是： 利用状态码，我们就可以不必写诸如if (e.getErrorMessage().contains(\\"exist\\"))的代码， 只需要使用e.getStatusType().getCode() == TSStatusCode.TIMESE...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://iotdb.apache.org/UserGuide/V1.0.x/Reference/Status-Codes.html"}],["meta",{"property":"og:url","content":"https://iotdb.apache.org/zh/UserGuide/V1.0.x/Reference/Status-Codes.html"}],["meta",{"property":"og:site_name","content":"IoTDB Website"}],["meta",{"property":"og:title","content":"状态码"}],["meta",{"property":"og:description","content":"IoTDB 引入了状态码这一概念。例如，因为 IoTDB 需要在写入数据之前首先注册时间序列，一种可能的解决方案是： 利用状态码，我们就可以不必写诸如if (e.getErrorMessage().contains(\\"exist\\"))的代码， 只需要使用e.getStatusType().getCode() == TSStatusCode.TIMESE..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-07-21T06:26:43.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-21T06:26:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"状态码\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-21T06:26:43.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1689920803000,"updatedTime":1689920803000,"contributors":[{"name":"wanghui42","email":"105700158+wanghui42@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":4.72,"words":1415},"filePathRelative":"zh/UserGuide/V1.0.x/Reference/Status-Codes.md","localizedDate":"2023年7月21日","autoDesc":true}');export{e as data};
